# python version 1.0						DO NOT EDIT
#
# This python file has been generated by smidump version 0.5.0:
#
#   smidump -f python TUNNEL-MIB

FILENAME = "./libsmi-0.5.0/mibs/ietf/TUNNEL-MIB"

MIB = {
    "moduleName" : "TUNNEL-MIB",

    "TUNNEL-MIB" : {
        "nodetype" : "module",
        "language" : "SMIv2",
        "organization" :    
            """IETF IP Version 6 (IPv6) Working Group""",
        "contact" : 
            """ Dave Thaler
Microsoft Corporation
One Microsoft Way
Redmond, WA  98052-6399
EMail: dthaler@microsoft.com""",
        "description" :
            """The MIB module for management of IP Tunnels,
independent of the specific encapsulation scheme in
use.

Copyright (C) The Internet Society (2005).  This
version of this MIB module is part of RFC 4087;  see
the RFC itself for full legal notices.""",
        "revisions" : (
            {
                "date" : "2005-05-16 00:00",
                "description" :
                    """IPv4-specific objects were deprecated, including
tunnelIfLocalAddress, tunnelIfRemoteAddress, the
tunnelConfigTable, and the tunnelMIBBasicGroup.

Added IP version-agnostic objects that should be used
instead, including tunnelIfAddressType,
tunnelIfLocalInetAddress, tunnelIfRemoteInetAddress,
the tunnelInetConfigTable, and the
tunnelIMIBInetGroup.

The new tunnelIfLocalInetAddress and
tunnelIfRemoteInetAddress objects are read-write,
rather than read-only.

Updated DESCRIPTION clauses of existing version-
agnostic objects (e.g., tunnelIfTOS) that contained
IPv4-specific text to cover IPv6 as well.

Added tunnelIfFlowLabel for tunnels over IPv6.

The encapsulation method was previously an INTEGER
type, and is now an IANA-maintained textual
convention.

Published as RFC 4087.""",
            },
            {
                "date" : "1999-08-24 12:00",
                "description" :
                    """Initial version, published as RFC 2667.""",
            },
        ),
        "identity node" : "tunnelMIB",
    },

    "imports" : (
        {"module" : "SNMPv2-SMI", "name" : "MODULE-IDENTITY"},
        {"module" : "SNMPv2-SMI", "name" : "OBJECT-TYPE"},
        {"module" : "SNMPv2-SMI", "name" : "transmission"},
        {"module" : "SNMPv2-SMI", "name" : "Integer32"},
        {"module" : "SNMPv2-SMI", "name" : "IpAddress"},
        {"module" : "SNMPv2-TC", "name" : "RowStatus"},
        {"module" : "SNMPv2-TC", "name" : "StorageType"},
        {"module" : "SNMPv2-CONF", "name" : "MODULE-COMPLIANCE"},
        {"module" : "SNMPv2-CONF", "name" : "OBJECT-GROUP"},
        {"module" : "INET-ADDRESS-MIB", "name" : "InetAddressType"},
        {"module" : "INET-ADDRESS-MIB", "name" : "InetAddress"},
        {"module" : "IPV6-FLOW-LABEL-MIB", "name" : "IPv6FlowLabelOrAny"},
        {"module" : "IF-MIB", "name" : "ifIndex"},
        {"module" : "IF-MIB", "name" : "InterfaceIndexOrZero"},
        {"module" : "IANAifType-MIB", "name" : "IANAtunnelType"},
    ),

    "nodes" : {
        "tunnelMIB" : {
            "nodetype" : "node",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131",
            "status" : "current",
        }, # node
        "tunnelMIBObjects" : {
            "nodetype" : "node",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1",
        }, # node
        "tunnel" : {
            "nodetype" : "node",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1",
        }, # node
        "tunnelIfTable" : {
            "nodetype" : "table",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1",
            "status" : "current",
            "description" :
                """The (conceptual) table containing information on
configured tunnels.""",
        }, # table
        "tunnelIfEntry" : {
            "nodetype" : "row",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1",
            "status" : "current",
            "linkage" : [
                "ifIndex",
            ],
            "description" :
                """An entry (conceptual row) containing the information
on a particular configured tunnel.""",
        }, # row
        "tunnelIfLocalAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.1",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "IpAddress"},
            },
            "access" : "readonly",
            "description" :
                """The address of the local endpoint of the tunnel
(i.e., the source address used in the outer IP
header), or 0.0.0.0 if unknown or if the tunnel is
over IPv6.

Since this object does not support IPv6, it is
deprecated in favor of tunnelIfLocalInetAddress.""",
        }, # column
        "tunnelIfRemoteAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.2",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "IpAddress"},
            },
            "access" : "readonly",
            "description" :
                """The address of the remote endpoint of the tunnel
(i.e., the destination address used in the outer IP
header), or 0.0.0.0 if unknown, or an IPv6 address, or



the tunnel is not a point-to-point link (e.g., if it
is a 6to4 tunnel).

Since this object does not support IPv6, it is
deprecated in favor of tunnelIfRemoteInetAddress.""",
        }, # column
        "tunnelIfEncapsMethod" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"IANAifType-MIB", "name" : "IANAtunnelType"},
            },
            "access" : "readonly",
            "description" :
                """The encapsulation method used by the tunnel.""",
        }, # column
        "tunnelIfHopLimit" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.4",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "255"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """The IPv4 TTL or IPv6 Hop Limit to use in the outer IP
header.  A value of 0 indicates that the value is
copied from the payload's header.""",
        }, # column
        "tunnelIfSecurity" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.5",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "none" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "ipsec" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "other" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """The method used by the tunnel to secure the outer IP
header.  The value ipsec indicates that IPsec is used
between the tunnel endpoints for authentication or
encryption or both.  More specific security-related
information may be available in a MIB module for the
security protocol in use.""",
        }, # column
        "tunnelIfTOS" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.6",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "-2",
                        "max" : "63"
                    },
                    ],
                    "range" : {
                        "min" : "-2",
                        "max" : "63"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """The method used to set the high 6 bits (the



differentiated services codepoint) of the IPv4 TOS or
IPv6 Traffic Class in the outer IP header.  A value of
-1 indicates that the bits are copied from the
payload's header.  A value of -2 indicates that a
traffic conditioner is invoked and more information
may be available in a traffic conditioner MIB module.
A value between 0 and 63 inclusive indicates that the
bit field is set to the indicated value.

Note: instead of the name tunnelIfTOS, a better name
would have been tunnelIfDSCPMethod, but the existing
name appeared in RFC 2667 and existing objects cannot
be renamed.""",
        }, # column
        "tunnelIfFlowLabel" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"IPV6-FLOW-LABEL-MIB", "name" : "IPv6FlowLabelOrAny"},
            },
            "access" : "readwrite",
            "description" :
                """The method used to set the IPv6 Flow Label value.
This object need not be present in rows where
tunnelIfAddressType indicates the tunnel is not over
IPv6.  A value of -1 indicates that a traffic
conditioner is invoked and more information may be
available in a traffic conditioner MIB.  Any other
value indicates that the Flow Label field is set to
the indicated value.""",
        }, # column
        "tunnelIfAddressType" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"INET-ADDRESS-MIB", "name" : "InetAddressType"},
            },
            "access" : "readwrite",
            "description" :
                """The type of address in the corresponding
tunnelIfLocalInetAddress and tunnelIfRemoteInetAddress
objects.""",
        }, # column
        "tunnelIfLocalInetAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"INET-ADDRESS-MIB", "name" : "InetAddress"},
            },
            "access" : "readwrite",
            "description" :
                """The address of the local endpoint of the tunnel
(i.e., the source address used in the outer IP
header).  If the address is unknown, the value is



0.0.0.0 for IPv4 or :: for IPv6.  The type of this
object is given by tunnelIfAddressType.""",
        }, # column
        "tunnelIfRemoteInetAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.10",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"INET-ADDRESS-MIB", "name" : "InetAddress"},
            },
            "access" : "readwrite",
            "description" :
                """The address of the remote endpoint of the tunnel
(i.e., the destination address used in the outer IP
header).  If the address is unknown or the tunnel is
not a point-to-point link (e.g., if it is a 6to4
tunnel), the value is 0.0.0.0 for tunnels over IPv4 or
:: for tunnels over IPv6.  The type of this object is
given by tunnelIfAddressType.""",
        }, # column
        "tunnelIfEncapsLimit" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.1.1.11",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "-1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "-1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """The maximum number of additional encapsulations
permitted for packets undergoing encapsulation at this
node.  A value of -1 indicates that no limit is
present (except as a result of the packet size).""",
            "reference" :
                """RFC 2473, section 4.1.1""",
        }, # column
        "tunnelConfigTable" : {
            "nodetype" : "table",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2",
            "status" : "deprecated",
            "description" :
                """The (conceptual) table containing information on
configured tunnels.  This table can be used to map a
set of tunnel endpoints to the associated ifIndex
value.  It can also be used for row creation.  Note
that every row in the tunnelIfTable with a fixed IPv4
destination address should have a corresponding row in
the tunnelConfigTable, regardless of whether it was
created via SNMP.

Since this table does not support IPv6, it is
deprecated in favor of tunnelInetConfigTable.""",
        }, # table
        "tunnelConfigEntry" : {
            "nodetype" : "row",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1",
            "create" : "true",
            "status" : "deprecated",
            "linkage" : [
                "tunnelConfigLocalAddress",
                "tunnelConfigRemoteAddress",
                "tunnelConfigEncapsMethod",
                "tunnelConfigID",
            ],
            "description" :
                """An entry (conceptual row) containing the information
on a particular configured tunnel.

Since this entry does not support IPv6, it is
deprecated in favor of tunnelInetConfigEntry.""",
        }, # row
        "tunnelConfigLocalAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1.1",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "IpAddress"},
            },
            "access" : "noaccess",
            "description" :
                """The address of the local endpoint of the tunnel, or
0.0.0.0 if the device is free to choose any of its
addresses at tunnel establishment time.

Since this object does not support IPv6, it is
deprecated in favor of tunnelInetConfigLocalAddress.""",
        }, # column
        "tunnelConfigRemoteAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1.2",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "IpAddress"},
            },
            "access" : "noaccess",
            "description" :
                """The address of the remote endpoint of the tunnel.

Since this object does not support IPv6, it is
deprecated in favor of tunnelInetConfigRemoteAddress.""",
        }, # column
        "tunnelConfigEncapsMethod" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1.3",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"IANAifType-MIB", "name" : "IANAtunnelType"},
            },
            "access" : "noaccess",
            "description" :
                """The encapsulation method used by the tunnel.

Since this object does not support IPv6, it is
deprecated in favor of tunnelInetConfigEncapsMethod.""",
        }, # column
        "tunnelConfigID" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1.4",
            "status" : "deprecated",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """An identifier used to distinguish between multiple
tunnels of the same encapsulation method, with the
same endpoints.  If the encapsulation protocol only
allows one tunnel per set of endpoint addresses (such
as for GRE or IP-in-IP), the value of this object is
1.  For encapsulation methods (such as L2F) which
allow multiple parallel tunnels, the manager is
responsible for choosing any ID which does not
conflict with an existing row, such as choosing a
random number.

Since this object does not support IPv6, it is
deprecated in favor of tunnelInetConfigID.""",
        }, # column
        "tunnelConfigIfIndex" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1.5",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"IF-MIB", "name" : "InterfaceIndexOrZero"},
            },
            "access" : "readonly",
            "description" :
                """If the value of tunnelConfigStatus for this row is
active, then this object contains the value of ifIndex
corresponding to the tunnel interface.  A value of 0
is not legal in the active state, and means that the
interface index has not yet been assigned.

Since this object does not support IPv6, it is
deprecated in favor of tunnelInetConfigIfIndex.""",
        }, # column
        "tunnelConfigStatus" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.2.1.6",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """The status of this row, by which new entries may be
created, or old entries deleted from this table.  The
agent need not support setting this object to
createAndWait or notInService since there are no other
writable objects in this table, and writable objects
in rows of corresponding tables such as the
tunnelIfTable may be modified while this row is
active.

To create a row in this table for an encapsulation
method which does not support multiple parallel
tunnels with the same endpoints, the management
station should simply use a tunnelConfigID of 1, and
set tunnelConfigStatus to createAndGo.  For
encapsulation methods such as L2F which allow multiple
parallel tunnels, the management station may select a
pseudo-random number to use as the tunnelConfigID and
set tunnelConfigStatus to createAndGo.  In the event
that this ID is already in use and an
inconsistentValue is returned in response to the set
operation, the management station should simply select
a new pseudo-random number and retry the operation.

Creating a row in this table will cause an interface
index to be assigned by the agent in an
implementation-dependent manner, and corresponding
rows will be instantiated in the ifTable and the
tunnelIfTable.  The status of this row will become
active as soon as the agent assigns the interface
index, regardless of whether the interface is
operationally up.

Deleting a row in this table will likewise delete the
corresponding row in the ifTable and in the
tunnelIfTable.

Since this object does not support IPv6, it is
deprecated in favor of tunnelInetConfigStatus.""",
        }, # column
        "tunnelInetConfigTable" : {
            "nodetype" : "table",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3",
            "status" : "current",
            "description" :
                """The (conceptual) table containing information on
configured tunnels.  This table can be used to map a
set of tunnel endpoints to the associated ifIndex
value.  It can also be used for row creation.  Note
that every row in the tunnelIfTable with a fixed
destination address should have a corresponding row in
the tunnelInetConfigTable, regardless of whether it
was created via SNMP.""",
        }, # table
        "tunnelInetConfigEntry" : {
            "nodetype" : "row",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "tunnelInetConfigAddressType",
                "tunnelInetConfigLocalAddress",
                "tunnelInetConfigRemoteAddress",
                "tunnelInetConfigEncapsMethod",
                "tunnelInetConfigID",
            ],
            "description" :
                """An entry (conceptual row) containing the information
on a particular configured tunnel.  Note that there is
a 128 subid maximum for object OIDs.  Implementers
need to be aware that if the total number of octets in
tunnelInetConfigLocalAddress and
tunnelInetConfigRemoteAddress exceeds 110 then OIDs of
column instances in this table will have more than 128
sub-identifiers and cannot be accessed using SNMPv1,
SNMPv2c, or SNMPv3.  In practice this is not expected
to be a problem since IPv4 and IPv6 addresses will not
cause the limit to be reached, but if other types are
supported by an agent, care must be taken to ensure
that the sum of the lengths do not cause the limit to
be exceeded.""",
        }, # row
        "tunnelInetConfigAddressType" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"INET-ADDRESS-MIB", "name" : "InetAddressType"},
            },
            "access" : "noaccess",
            "description" :
                """The address type over which the tunnel encapsulates
packets.""",
        }, # column
        "tunnelInetConfigLocalAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"INET-ADDRESS-MIB", "name" : "InetAddress"},
            },
            "access" : "noaccess",
            "description" :
                """The address of the local endpoint of the tunnel, or
0.0.0.0 (for IPv4) or :: (for IPv6) if the device is
free to choose any of its addresses at tunnel
establishment time.""",
        }, # column
        "tunnelInetConfigRemoteAddress" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"INET-ADDRESS-MIB", "name" : "InetAddress"},
            },
            "access" : "noaccess",
            "description" :
                """The address of the remote endpoint of the tunnel.""",
        }, # column
        "tunnelInetConfigEncapsMethod" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"IANAifType-MIB", "name" : "IANAtunnelType"},
            },
            "access" : "noaccess",
            "description" :
                """The encapsulation method used by the tunnel.""",
        }, # column
        "tunnelInetConfigID" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.5",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """An identifier used to distinguish between multiple
tunnels of the same encapsulation method, with the
same endpoints.  If the encapsulation protocol only
allows one tunnel per set of endpoint addresses (such
as for GRE or IP-in-IP), the value of this object is
1.  For encapsulation methods (such as L2F) which
allow multiple parallel tunnels, the manager is
responsible for choosing any ID which does not



conflict with an existing row, such as choosing a
random number.""",
        }, # column
        "tunnelInetConfigIfIndex" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"IF-MIB", "name" : "InterfaceIndexOrZero"},
            },
            "access" : "readonly",
            "description" :
                """If the value of tunnelInetConfigStatus for this row
is active, then this object contains the value of
ifIndex corresponding to the tunnel interface.  A
value of 0 is not legal in the active state, and means
that the interface index has not yet been assigned.""",
        }, # column
        "tunnelInetConfigStatus" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """The status of this row, by which new entries may be
created, or old entries deleted from this table.  The
agent need not support setting this object to
createAndWait or notInService since there are no other
writable objects in this table, and writable objects
in rows of corresponding tables such as the
tunnelIfTable may be modified while this row is
active.

To create a row in this table for an encapsulation
method which does not support multiple parallel
tunnels with the same endpoints, the management
station should simply use a tunnelInetConfigID of 1,
and set tunnelInetConfigStatus to createAndGo.  For
encapsulation methods such as L2F which allow multiple
parallel tunnels, the management station may select a
pseudo-random number to use as the tunnelInetConfigID
and set tunnelInetConfigStatus to createAndGo.  In the
event that this ID is already in use and an
inconsistentValue is returned in response to the set
operation, the management station should simply select
a new pseudo-random number and retry the operation.

Creating a row in this table will cause an interface
index to be assigned by the agent in an
implementation-dependent manner, and corresponding
rows will be instantiated in the ifTable and the



tunnelIfTable.  The status of this row will become
active as soon as the agent assigns the interface
index, regardless of whether the interface is
operationally up.

Deleting a row in this table will likewise delete the
corresponding row in the ifTable and in the
tunnelIfTable.""",
        }, # column
        "tunnelInetConfigStorageType" : {
            "nodetype" : "column",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.1.1.3.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "StorageType"},
            },
            "access" : "readwrite",
            "description" :
                """The storage type of this row.  If the row is
permanent(4), no objects in the row need be writable.""",
        }, # column
        "tunnelMIBConformance" : {
            "nodetype" : "node",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2",
        }, # node
        "tunnelMIBCompliances" : {
            "nodetype" : "node",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.1",
        }, # node
        "tunnelMIBGroups" : {
            "nodetype" : "node",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.2",
        }, # node
    }, # nodes

    "groups" : {
        "tunnelMIBBasicGroup" : {
            "nodetype" : "group",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.2.1",
            "status" : "deprecated",
            "members" : {
                "tunnelIfLocalAddress" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfRemoteAddress" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfEncapsMethod" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfHopLimit" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfTOS" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfSecurity" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelConfigIfIndex" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelConfigStatus" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
            }, # members
            "description" :
                """A collection of objects to support basic management



of IPv4 Tunnels.  Since this group cannot support
IPv6, it is deprecated in favor of
tunnelMIBInetGroup.""",
        }, # group
        "tunnelMIBInetGroup" : {
            "nodetype" : "group",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.2.2",
            "status" : "current",
            "members" : {
                "tunnelIfAddressType" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfLocalInetAddress" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfRemoteInetAddress" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfEncapsMethod" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfEncapsLimit" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfHopLimit" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfTOS" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfFlowLabel" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelIfSecurity" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelInetConfigIfIndex" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelInetConfigStatus" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
                "tunnelInetConfigStorageType" : {
                    "nodetype" : "member",
                    "module" : "TUNNEL-MIB"
                },
            }, # members
            "description" :
                """A collection of objects to support basic management
of IPv4 and IPv6 Tunnels.""",
        }, # group
    }, # groups

    "compliances" : {
        "tunnelMIBCompliance" : {
            "nodetype" : "compliance",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.1.1",
            "status" : "deprecated",
            "description" :
                """The (deprecated) IPv4-only compliance statement for
the IP Tunnel MIB.

This is deprecated in favor of
tunnelMIBInetFullCompliance and
tunnelMIBInetReadOnlyCompliance.""",
            "requires" : {
                "tunnelMIBBasicGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "TUNNEL-MIB"
                },
            }, # requires
            "refinements" : {
                "tunnelIfHopLimit" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelIfTOS" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelConfigStatus" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
            }, # refinements

        }, # compliance
        "tunnelMIBInetFullCompliance" : {
            "nodetype" : "compliance",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.1.2",
            "status" : "current",
            "description" :
                """The full compliance statement for the IP Tunnel MIB.""",
            "requires" : {
                "tunnelMIBInetGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "TUNNEL-MIB"
                },
            }, # requires
            "refinements" : {
                "tunnelIfAddressType" : {
                    "module" : "TUNNEL-MIB",
                    "syntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "INET-ADDRESS-MIB",
                                "type" : "InetAddressType",
                            },
                            "ipv4" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                            "ipv6" : {
                                "nodetype" : "namednumber",
                                "number" : "2"
                            },
                            "ipv4z" : {
                                "nodetype" : "namednumber",
                                "number" : "3"
                            },
                            "ipv6z" : {
                                "nodetype" : "namednumber",
                                "number" : "4"
                            },
                        },
                    }, # syntax
                    "description" :
                        """An implementation is only required to support IPv4
and/or IPv6 addresses.  An implementation only needs to
support the addresses it actually supports on the
device.""",
                },
            }, # refinements

        }, # compliance
        "tunnelMIBInetReadOnlyCompliance" : {
            "nodetype" : "compliance",
            "moduleName" : "TUNNEL-MIB",
            "oid" : "1.3.6.1.2.1.10.131.2.1.3",
            "status" : "current",
            "description" :
                """The read-only compliance statement for the IP Tunnel
MIB.""",
            "requires" : {
                "tunnelMIBInetGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "TUNNEL-MIB"
                },
            }, # requires
            "refinements" : {
                "tunnelIfHopLimit" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelIfTOS" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelIfFlowLabel" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelIfAddressType" : {
                    "module" : "TUNNEL-MIB",
                    "syntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "INET-ADDRESS-MIB",
                                "type" : "InetAddressType",
                            },
                            "ipv4" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                            "ipv6" : {
                                "nodetype" : "namednumber",
                                "number" : "2"
                            },
                            "ipv4z" : {
                                "nodetype" : "namednumber",
                                "number" : "3"
                            },
                            "ipv6z" : {
                                "nodetype" : "namednumber",
                                "number" : "4"
                            },
                        },
                    }, # syntax
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.

An implementation is only required to support IPv4
and/or IPv6 addresses.  An implementation only needs to
support the addresses it actually supports on the
device.""",
                },
                "tunnelIfLocalInetAddress" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelIfRemoteInetAddress" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelIfEncapsLimit" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "tunnelInetConfigStatus" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required, and active is the only
status that needs to be supported.""",
                },
                "tunnelInetConfigStorageType" : {
                    "module" : "TUNNEL-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
            }, # refinements

        }, # compliance
    }, # compliances

}
