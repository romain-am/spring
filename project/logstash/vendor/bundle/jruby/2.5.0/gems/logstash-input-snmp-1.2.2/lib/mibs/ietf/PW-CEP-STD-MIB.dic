# python version 1.0						DO NOT EDIT
#
# This python file has been generated by smidump version 0.5.0:
#
#   smidump -f python PW-CEP-STD-MIB

FILENAME = "./libsmi-0.5.0/mibs/ietf/PW-CEP-STD-MIB"

MIB = {
    "moduleName" : "PW-CEP-STD-MIB",

    "PW-CEP-STD-MIB" : {
        "nodetype" : "module",
        "language" : "SMIv2",
        "organization" :    
            """Pseudowire Emulation Edge-to-Edge (PWE3)
Working Group""",
        "contact" : 
            """David Zelig (Ed.)
Email: david_zelig@pmc-sierra.com

Ron Cohen (Ed.)
Email: ronc@resolutenetworks.com

Thomas D. Nadeau (Ed.)
Email: Thomas.Nadeau@ca.com

The PWE3 Working Group
Email: pwe3@ietf.org (email distribution)
http://www.ietf.org/html.charters/pwe3-charter.html""",
        "description" :
            """This MIB module contains managed object definitions for
Circuit Emulation over Packet (CEP) as in [RFC4842]:  Malis,
A., Prayson, P., Cohen, R., and D. Zelig. 'Synchronous
Optical Network/Synchronous Digital Hierarchy (SONET/SDH)
Circuit Emulation over Packet (CEP)', RFC 4842.





Copyright (c) 2011 IETF Trust and the persons identified as
authors of the code.  All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, is permitted pursuant to, and subject
to the license terms contained in, the Simplified BSD
License set forth in Section 4.c of the IETF Trust's Legal
Provisions Relating to IETF Documents
(http://trustee.ietf.org/license-info).""",
        "revisions" : (
            {
                "date" : "2011-05-16 00:00",
                "description" :
                    """This MIB module published as part of RFC 6240.""",
            },
        ),
        "identity node" : "pwCepStdMIB",
    },

    "imports" : (
        {"module" : "SNMPv2-SMI", "name" : "MODULE-IDENTITY"},
        {"module" : "SNMPv2-SMI", "name" : "OBJECT-TYPE"},
        {"module" : "SNMPv2-SMI", "name" : "Integer32"},
        {"module" : "SNMPv2-SMI", "name" : "Counter32"},
        {"module" : "SNMPv2-SMI", "name" : "Unsigned32"},
        {"module" : "SNMPv2-SMI", "name" : "Counter64"},
        {"module" : "SNMPv2-SMI", "name" : "mib-2"},
        {"module" : "SNMPv2-CONF", "name" : "MODULE-COMPLIANCE"},
        {"module" : "SNMPv2-CONF", "name" : "OBJECT-GROUP"},
        {"module" : "SNMPv2-TC", "name" : "TEXTUAL-CONVENTION"},
        {"module" : "SNMPv2-TC", "name" : "TruthValue"},
        {"module" : "SNMPv2-TC", "name" : "RowStatus"},
        {"module" : "SNMPv2-TC", "name" : "StorageType"},
        {"module" : "SNMPv2-TC", "name" : "TimeStamp"},
        {"module" : "SNMP-FRAMEWORK-MIB", "name" : "SnmpAdminString"},
        {"module" : "IF-MIB", "name" : "InterfaceIndexOrZero"},
        {"module" : "IF-MIB", "name" : "InterfaceIndex"},
        {"module" : "PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
        {"module" : "PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
        {"module" : "HC-PerfHist-TC-MIB", "name" : "HCPerfCurrentCount"},
        {"module" : "HC-PerfHist-TC-MIB", "name" : "HCPerfIntervalCount"},
        {"module" : "HC-PerfHist-TC-MIB", "name" : "HCPerfTimeElapsed"},
        {"module" : "HC-PerfHist-TC-MIB", "name" : "HCPerfValidIntervals"},
        {"module" : "PW-STD-MIB", "name" : "pwIndex"},
        {"module" : "PW-TC-STD-MIB", "name" : "PwCfgIndexOrzero"},
    ),

    "typedefs" : {
        "PwCepSonetEbm" : {
            "basetype" : "Unsigned32",
            "status" : "current",
            "description" :
                """Equipped Bit Mask (EBM) used for fractional STS-1/Virtual
Circuit 3 (VC-3).  The EBM bits are the 28 least
significant bits out of the 32-bit value.""",
        },
        "PwCepSdhVc4Ebm" : {
            "basetype" : "Unsigned32",
            "status" : "current",
            "description" :
                """Equipped Bit Mask (EBM) used for each Tributary Unit Group
3 (TUG-3) in fractional VC-4 circuits.  The EBM bits are
the 30 least significant bits out of the 32-bit value.""",
        },
        "PwCepSonetVtgMap" : {
            "basetype" : "Unsigned32",
            "status" : "current",
            "description" :
                """The VT/VC types carried in the 7 VT groups (VTGs)/TUG-2s.
The format is 28 bits in the form of an Equipped Bit Mask
(EBM) for fractional STS-1/VC-3.  The mapping specifies the
maximal occupancies of VT/VC within each VTG/TUG-2.  For
example, all four bits are set to 1 in this object to
represent a VTG carrying VT1.5/VC11s, while only three
are set when VT2/VC12s are carried within this VTG.
The relevant bits are the 28 least significant bits out of
the 32-bit value.""",
        },
        "PwCepFracAsyncMap" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "other" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "ds3" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "e3" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "description" :
                """The type of asynchronous mapping carried inside STS-1,
VC-3, or TUG-3 containing TU-3 circuit.""",
        },
    }, # typedefs

    "nodes" : {
        "pwCepStdMIB" : {
            "nodetype" : "node",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200",
            "status" : "current",
        }, # node
        "pwCepObjects" : {
            "nodetype" : "node",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1",
        }, # node
        "pwCepTable" : {
            "nodetype" : "table",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1",
            "status" : "current",
            "description" :
                """This table contains objects and parameters for managing and
monitoring the CEP PW.""",
        }, # table
        "pwCepEntry" : {
            "nodetype" : "row",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1",
            "status" : "current",
            "linkage" : [
                "pwIndex",
            ],
            "description" :
                """Each entry represents the association of a SONET/SDH path or
VT to a PW.  This table is indexed by the pwIndex of the
applicable PW entry in the pwTable.

An entry is created in this table by the agent for every
entry in the pwTable with a pwType equal to 'cep'.

All read-write objects in this table MAY be changed at any
time; however, change of some objects (for example
pwCepCfgIndex) during PW forwarding state may cause
traffic disruption.



Manual entries in this table SHOULD be preserved after a
reboot.  The agent MUST ensure the integrity of those
entries.  If the set of entries of a specific row are found
to be inconsistent after reboot, the PW pwOperStatus MUST
be declared as notPresent(5).""",
        }, # row
        "pwCepType" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "spe" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "vt" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "fracSpe" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                },
            },
            "access" : "readwrite",
            "default" : "spe",
            "description" :
                """Specifies the sub-type of CEP PW.  Currently only
structured types are supported:

'spe'(1)      : SONET STS-Nc signals.
'vt' (2)      : SONET VT-x (x=1.5,2,3,6) signals.
'fracSpe' (3) : SONET fractional STS-1 or SDH fractional
                VC-3 or VC-4 carrying tributaries or
                asynchronous signals.

Support of 'vt' mode or 'fracSpe' mode is optional.""",
        }, # column
        "pwCepSonetIfIndex" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"IF-MIB", "name" : "InterfaceIndexOrZero"},
            },
            "access" : "readwrite",
            "description" :
                """This is a unique index within the ifTable.  It represents
the interface index for the SONET path for SPE emulation
([RFC3592], Section 3.3), an interface index for the SONET
VT ([RFC3592], Section 3.4) if the VT to be emulated is
extracted from a SONET signal or locally mapped from a
physical interface.

A value of zero indicates an interface index that has yet
to be determined.

Once set, if the SONET ifIndex is (for some reason) later
removed, the agent MAY delete the associated PW rows
(e.g., this pwCepTableEntry).  If the agent does not
delete the rows, it is RECOMMENDED that the agent set this
object to zero.""",
        }, # column
        "pwCepSonetConfigErrorOrStatus" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.3",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Bits",
                    "other" : {
                        "nodetype" : "namednumber",
                        "number" : "0"
                    },
                    "timeslotInUse" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "timeslotMisuse" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "peerDbaIncompatible" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "peerEbmIncompatible" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                    "peerRtpIncompatible" : {
                        "nodetype" : "namednumber",
                        "number" : "5"
                    },
                    "peerAsyncIncompatible" : {
                        "nodetype" : "namednumber",
                        "number" : "6"
                    },
                    "peerDbaAsymmetric" : {
                        "nodetype" : "namednumber",
                        "number" : "7"
                    },
                    "peerEbmAsymmetric" : {
                        "nodetype" : "namednumber",
                        "number" : "8"
                    },
                    "peerRtpAsymmetric" : {
                        "nodetype" : "namednumber",
                        "number" : "9"
                    },
                    "peerAsyncAsymmetric" : {
                        "nodetype" : "namednumber",
                        "number" : "10"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """This object reports a configuration mismatch inside
the local node or between the local node and the peer node.
Some bits indicate an error, and some are simply status
reports that do not affect the forwarding process.

'timeslotInUse'(1) is set when another CEP PW has already
reserved a timeslot (or timeslots) that this CEP PW is
attempting to reserve.



'timeslotMisuse'(2) is set when the stated timeslot this
PW is trying to use is not legal, for example, if
specifying a starting timeslot of 45 for a SONET path of
an STS-12c width.

The peerZZZIncompatible bits are set if the local
configuration is not compatible with the peer configuration
as available from the CEP option received from the peer
through the signaling process and the local node cannot
support such asymmetric configuration.

The peerZZZAsymmetric bits are set if the local
configuration is not compatible with the peer configuration
as available from the CEP option received from the peer
through the signaling process, but the local node can
support such asymmetric configuration.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 12.""",
        }, # column
        "pwCepCfgIndex" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-TC-STD-MIB", "name" : "PwCfgIndexOrzero"},
            },
            "access" : "readwrite",
            "description" :
                """Index to CEP configuration table below.  Multiple CEP PWs
MAY share a single pwCepCfgEntry.

The value 0 indicates that no entries are available.""",
        }, # column
        "pwCepTimeElapsed" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfTimeElapsed"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The number of seconds, including partial seconds,
that have elapsed since the beginning of the current
measurement period.  If, for some reason such as an
adjustment in the system's time-of-day clock, the
current interval exceeds the maximum value, the
agent will return the maximum value.""",
        }, # column
        "pwCepValidIntervals" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfValidIntervals"},
            },
            "access" : "readonly",
            "description" :
                """The number (n) of previous 15-minute intervals for which
data was collected.

An agent with CEP capability MUST be capable of supporting
at least 4 intervals.  The RECOMMENDED default value for
n is 32, and n MUST NOT exceed 96.""",
        }, # column
        "pwCepIndications" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.7",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Bits",
                    "missingPkt" : {
                        "nodetype" : "namednumber",
                        "number" : "0"
                    },
                    "ooRngDropped" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "jtrBfrUnder" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "pktMalformed" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "lops" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                    "cepRdi" : {
                        "nodetype" : "namednumber",
                        "number" : "5"
                    },
                    "cepAis" : {
                        "nodetype" : "namednumber",
                        "number" : "6"
                    },
                    "badHdrStack" : {
                        "nodetype" : "namednumber",
                        "number" : "7"
                    },
                    "cepNeFailure" : {
                        "nodetype" : "namednumber",
                        "number" : "8"
                    },
                    "cepFeFailure" : {
                        "nodetype" : "namednumber",
                        "number" : "9"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """Definitions:

'missingPkt'(0) - While playing out a sequence of packets,
at least one packet was determined to be missing based on a
gap in the CEP sequence number.  Note: If the implementation
supports packet reordering, detecting gaps SHOULD take
place as they are played out, not as they arrive.  This
provides time for misordered packets to arrive late.

'ooRngDropped'(1) - At least one packet arrived outside the
range of the jitter buffer.  This may be because the
jitter buffer is full or the sequence number addresses
a buffer outside the current jitter buffer range or
an already occupied buffer within range.  Whether or not
packet reordering is supported by the implementation, this
indication MUST be supported.






'jtrBfrUnder'(2) - The jitter buffer underflowed because
not enough packets arrived as packets were being
played out.

'pktMalformed'(3) - Any error related to unexpected
packet format (except bad header stack) or unexpected
length.

'lops'(4) - Loss of Packet Synchronization.

'cepRdi'(5) - Circuit Emulation over Packet Remote Defect
Indication.  Remote Defect Indication (RDI) is generated by
the remote CEP de-packetizer when LOPS is detected.

'cepAis'(6) - Remote CEP packetizer has detected an Alarm
Indication Signal (AIS) on its incoming SONET stream.
cepAis MUST NOT (in itself) cause a CEP PW down
notification.

'badHdrStack'(7) - Set when the number of
CEP header extensions detected in incoming packets does
not match the expected number.

'cepNeFailure'(8) - Set when CEP-NE failure is currently
declared.

'cepFeFailure'(8) - Set when CEP-FE failure is currently
declared.

This object MUST hold the accumulated indications until the
next SNMP write that clear the indication(s).

Writing a non-zero value MUST fail.

Currently, there is no hierarchy of CEP defects.

The algorithm used to capture these indications
is implementation specific.""",
        }, # column
        "pwCepLastEsTimeStamp" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readonly",
            "description" :
                """The value of sysUpTime on the most recent occasion at which
the CEP PW entered the Errored Seconds (ES) or Severely
Errored Seconds (SES) state.""",
        }, # column
        "pwCepPeerCepOption" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.1.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readonly",
            "description" :
                """The value of the CEP option parameter as received from the
peer by the PW signaling protocol.""",
        }, # column
        "pwCepCfgIndexNext" : {
            "nodetype" : "scalar",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-TC-STD-MIB", "name" : "PwCfgIndexOrzero"},
            },
            "access" : "readonly",
            "description" :
                """This object contains an appropriate value to be used
for pwCepCfgIndex when creating entries in the
pwCepCfgTable.  The value 0 indicates that no
unassigned entries are available.  To obtain the
value of pwCepCfgIndex for a new entry in the
pwCepCfgTable, the manager issues a management
protocol retrieval operation to obtain the current
value of pwCepCfgIndex.  After each retrieval
operation, the agent should modify the value to
reflect the next unassigned index.  After a manager
retrieves a value, the agent will determine through
its local policy when this index value will be made
available for reuse.""",
        }, # scalar
        "pwCepCfgTable" : {
            "nodetype" : "table",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3",
            "status" : "current",
            "description" :
                """This table contains a set of parameters that may be
referenced by one or more CEP PWs by pwCepTable.""",
        }, # table
        "pwCepCfgEntry" : {
            "nodetype" : "row",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "pwCepCfgTableIndex",
            ],
            "description" :
                """These parameters define the characteristics of a
CEP PW.  They are grouped here to ease Network Management
System (NMS) burden.  Once an entry is created here, it may
be reused by many PWs.

By default, all the read-create objects MUST NOT be
changed after row activation unless specifically indicated
in the individual object description.  If the operator
wishes to change value of a read-create object, the
pwCepCfgRowStatus MUST be set to notInService(2).

The agent MUST NOT allow the change of the
pwCepCfgRowStatus from the active(1) state for
pwCepCfgEntry, which is in use by at least one active PW.

Manual entries in this table SHOULD be preserved after a
reboot, the agent MUST ensure the integrity of those
entries.  If the set of entries of a specific row are found
to be inconsistent after reboot, the affected PWs'
pwOperStatus MUST be declared as notPresent(5).""",
        }, # row
        "pwCepCfgTableIndex" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Unsigned32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "4294967295"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "4294967295"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """Primary index to this table.""",
        }, # column
        "pwCepSonetPayloadLength" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "description" :
                """The number of SONET bytes of the Path or VT carried as
payload within one packet.  For example, for STS-1/VC-3 SPE
circuits, a value of 783 bytes indicates that each packet
carries the payload equivalent to one frame.  For VT1.5/VC11
circuits, a payload length of 104 bytes indicates that each
packet carries payload equivalent to one VT1.5 super-frame.
The actual payload size may be different due to bandwidth
reduction modes, e.g., Dynamic Bandwidth Allocation (DBA)
mode or dynamically assigned fractional SPE.  This length
applies to inbound and outbound packets carrying user
payload.  Although there is no control over inbound packets,
those of illegal length are discarded and accounted for (see
pwCepPerf...Malformed.)





The default values are determined by the pwCepType:
783 for pwCepType equal to spe(2) or fracSpe(3).
For vt(3) modes, the applicable super-frame payload size
is the default value.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Sections 5.1 and 12.1""",
        }, # column
        "pwCepCfgMinPktLength" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "default" : "0",
            "description" :
                """This object defines the minimum CEP packet length in
number of bytes (including CEP header and payload).
It applies to CEP's bandwidth-savings packets.  Currently,
DBA is the only bandwidth-savings packet type (in the
future, CEP may support compression).  Minimum packet
length is necessary in some systems or networks.

Setting zero here indicates that there is no minimum
packet restriction.""",
        }, # column
        "pwCepCfgPktReorder" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readonly",
            "description" :
                """This object defines if reordering is applied for incoming
packets.

If set 'true', as inbound packets are queued in the
jitter buffer, out-of-order packets are reordered.  The
maximum sequence number differential (i.e., the range in
which resequencing can occur) is dependant on the depth
of the jitter buffer.

If the local agent supports packet reordering, the default
value SHOULD be set to 'true'; otherwise, this value
SHOULD be set to 'false'.""",
        }, # column
        "pwCepCfgEnableDBA" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.5",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Bits",
                    "ais" : {
                        "nodetype" : "namednumber",
                        "number" : "0"
                    },
                    "unequipped" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """This object defines when DBA is applied for packets sent
toward the PSN.

Setting 'ais' MUST cause CEP packet payload suppression
when AIS is detected on the associated SONET path.
Similarly, 'unequipped' MUST cause payload suppression
when an unequipped condition is detected on the SONET/SDH
PATH/VT.

During DBA condition, CEP packets will continue
to be sent, but with indicators set in the CEP header
instructing the remote to play all ones (for AIS) or all
zeros (for unequipped) onto its SONET/SDH path.

NOTE: Some implementations may not support this feature.
In these cases, this object should be read-only.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 11.1.""",
        }, # column
        "pwCepCfgRtpHdrSuppress" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readwrite",
            "default" : "true",
            "description" :
                """If this object is set to 'true', an RTP header is not
prepended to the CEP packet.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 5.3.""",
        }, # column
        "pwCepCfgJtrBfrDepth" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "units" : "micro-seconds",
            "description" :
                """This object defines the number of microseconds
of expected packet delay variation for this CEP PW
over the PSN.

The actual jitter buffer MUST be at least twice this
value for proper operation.

If configured to a value not supported by the
implementation, the agent MUST reject the SNMP Set
operation.""",
            "reference" :
                """The control of jitter and wander within digital
networks which are based on the synchronous digital
hierarchy (SDH), ITU-T Recommendation G.825.""",
        }, # column
        "pwCepCfgConsecPktsInsync" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "default" : "2",
            "description" :
                """Consecutive packets with sequential sequence
numbers required to exit the LOPS state.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 6.2.2.""",
        }, # column
        "pwCepCfgConsecMissingOutSync" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "default" : "10",
            "description" :
                """Consecutive missing packets required to enter
the LOPS state.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 6.2.2.""",
        }, # column
        "pwCepCfgPktErrorPlayOutValue" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.10",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Unsigned32",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "255"
                    },
                },
            },
            "access" : "readwrite",
            "default" : "255",
            "description" :
                """This object defines the value played when inbound packets
have over/underflowed the jitter buffer or are missing
for any reason.  This byte pattern is sent (played) on
the SONET path.""",
        }, # column
        "pwCepCfgMissingPktsToSes" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.11",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "default" : "3",
            "units" : "seconds",
            "description" :
                """The number of missing packets detected (consecutive or not)
within a 1-second window to cause a Severely Errored
Second (SES) to be counted.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 10.1.""",
        }, # column
        "pwCepCfgSesToUas" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.12",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "default" : "10",
            "units" : "seconds",
            "description" :
                """The number of consecutive SESs before declaring PW in
Unavailable Seconds (UAS) state (at which point
pwCepPerfUASs starts counting).  The SesToUas default value
is 10 seconds.

NOTE: Similar to [RFC3592], if the agent chooses to update
the various performance statistics in real time, it MUST
be prepared to retroactively reduce the ES and SES counts by
this value and increase the UAS count by this value when it
determines that UAS state has been entered.

NOTE: See pwCepPerfSESs and pwCepPerfUASs.""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 10.1.""",
        }, # column
        "pwCepCfgSecsToExitUas" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.13",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Unsigned32"},
            },
            "access" : "readwrite",
            "default" : "10",
            "units" : "seconds",
            "description" :
                """The number of consecutive nonSESs before declaring PW is NOT
in UAS state (at which point pwCepPerfUASs stops counting).""",
            "reference" :
                """Malis, A., et al., 'Synchronous Optical Network/Synchronous
Digital Hierarchy (SONET/SDH) Circuit Emulation over Packet
(CEP)', RFC 4842, Section 10.1.""",
        }, # column
        "pwCepCfgName" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.14",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMP-FRAMEWORK-MIB", "name" : "SnmpAdminString"},
            },
            "access" : "readwrite",
            "description" :
                """This variable contains the name of the Configuration entry.
This name may be used to help the NMS to display the
purpose of the entry.""",
        }, # column
        "pwCepCfgRowStatus" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.15",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """For creating, modifying, and deleting this row.

None of the read-create objects' values can be changed
when pwCepCfgRowStatus is in the active(1) state.  Changes
are allowed when the pwRowStatus is in notInService(2) or
notReady(3) states only.

If the operator needs to change one of the values for an
active row (for example, in order to fix a mismatch in
configuration between the local node and the peer), the
pwCepCfgRowStatus should be first changed to
notInService(2).  The objects may be changed now and later
changed to active(1) in order to re-initiate the signaling
process with the new values in effect.

Change of status from the active(1) state or deleting a row
SHOULD be blocked by the local agent if the row is
referenced by any pwCepEntry those pwRowStatus
is in the active(1) state.""",
        }, # column
        "pwCepCfgStorageType" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.3.1.16",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "StorageType"},
            },
            "access" : "readwrite",
            "default" : "nonVolatile",
            "description" :
                """This object indicates the storage type for this row.""",
        }, # column
        "pwCepFracTable" : {
            "nodetype" : "table",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4",
            "status" : "current",
            "description" :
                """This table contains a set of parameters for CEP PWs with
pwCepType FRAC type.""",
        }, # table
        "pwCepFracEntry" : {
            "nodetype" : "row",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "pwCepFracIndex",
            ],
            "description" :
                """There are two options for creating an entry in this table:

- By the Element Management System (EMS) in advance for
  creating the PW.
- By the agent automatically when the PW is set up.

The first option is typically used when there is a native
service processing (NSP) cross-connect option between the
physical ports and the emulated (virtual ports), while the
second MAY be used when there is a one-to-one mapping
between the emulated signal and the physical signal.""",
        }, # row
        "pwCepFracIndex" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"IF-MIB", "name" : "InterfaceIndex"},
            },
            "access" : "noaccess",
            "description" :
                """This is the index of this table.  It is a unique
index within the ifTable.  It represents the interface index
for the SONET path ([RFC3592], Section 3.3) for fractional
SPE emulation.

It may represent an internal (virtual) interface if an NSP
function exists between the physical interface and the
emulation process.""",
        }, # column
        "pwCepFracMode" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.2",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "notApplicable" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "dynamic" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "static" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "staticWithEbm" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                    "staticAsync" : {
                        "nodetype" : "namednumber",
                        "number" : "5"
                    },
                },
            },
            "access" : "readwrite",
            "default" : "dynamic",
            "description" :
                """Fractional mode for STS-1/VC-3 or VC-4 circuits:

notApplicable - When this object is not applicable.
dynamic - EBM carried within the CEP header.  Unequipped
          VTs are removed from the payload on the fly.
static  - EBM not carried within the CEP header.  Only VTs
          defined in the EBM are carried within the payload.
staticWithEbm - EBM carried within the CEP header.  Only
          VTs defined in the EBM are carried within the
          payload.
staticAsync - Asynchronous E3/T3 fixed byte removal only.""",
        }, # column
        "pwCepFracConfigError" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.3",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Bits",
                    "other" : {
                        "nodetype" : "namednumber",
                        "number" : "0"
                    },
                    "vtgMapEbmConflict" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "vtgMapAsyncConflict" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """vtgMapEbmConflict(1) is set when the configured static EBM
does not match the configured vtgMap for fractional
STS-1/VC-3 circuits or when the TUG2Map is in conflict with
the static EBM for VC-4 circuits, for example, if the vtgMap
specifies that VTG#1 carries VT2 VTs while the EBM indicate
that four VTs are equipped within VTG#1.

vtgMapAsyncConflict(2) is set when there is a conflict
between the mode, the async indication, and the vtgMap
fields.  For example, fractional mode is set to staticAsync
while the VtgMap indicates that the STS-1/VC-3 carries VTs,
or both async1 and Tug2Map are set in fractional VC-4
circuits.""",
        }, # column
        "pwCepFracAsync" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepFracAsyncMap"},
            },
            "access" : "readwrite",
            "default" : "other",
            "description" :
                """This object defines the asynchronous payload carried
within the STS-1/VC-3.  This object is applicable when
pwCepFracMode equals 'staticAsync' and MUST equal to
'other' otherwise.""",
        }, # column
        "pwCepFracVtgMap" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSonetVtgMap"},
            },
            "access" : "readwrite",
            "description" :
                """This object defines the VT/VC types of the seven
VTG/TUG-2 within the STS-1/VC-3.

This variable should be set when 'dynamic', 'static',
or 'staticWithEbm' fractional STS-1/VC-3 pwCepFracMode
is selected.""",
        }, # column
        "pwCepFracEbm" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSonetEbm"},
            },
            "access" : "readwrite",
            "description" :
                """This object holds the static Equipped Bit Mask (EBM)
for STS-1/VC-3 channel.

This variable MAY be set when 'static' or
'staticWithEbm' fractional STS-1/VC-3 pwCepFracMode is
selected.

It is possible that the configuration of other MIB modules
will define the EBM value; in these cases, this object is
read-only and reflects the actual EBM that would be used.""",
        }, # column
        "pwCepFracPeerEbm" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSonetEbm"},
            },
            "access" : "readonly",
            "description" :
                """This object reports the Equipped Bit Mask (EBM) for
STS-1/VC-3 channel as received from the peer within
the CEP extension header.""",
        }, # column
        "pwCepFracSdhVc4Mode" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.8",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "notApplicable" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "dynamic" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "static" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "staticWithEbm" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                },
            },
            "access" : "readwrite",
            "default" : "notApplicable",
            "description" :
                """Fractional mode for VC-4 circuits:

notApplicable - When this is not VC-4 circuit.
dynamic - EBM carried within the CEP header.  Unequipped
          VTs are removed from the payload on the fly.
static  - EBM not carried within the CEP header.  Only VTs
          defined in the EBM are carried within the payload.
staticWithEbm - EBM carried within the CEP header.  Only
          VTs defined in the EBM are carried within the
          payload.""",
        }, # column
        "pwCepFracSdhVc4Tu3Map1" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepFracAsyncMap"},
            },
            "access" : "readwrite",
            "default" : "other",
            "description" :
                """The type of asynchronous mapping carried inside STS-1,
VC-3, or TUG-3 containing TU-3 circuit.""",
        }, # column
        "pwCepFracSdhVc4Tu3Map2" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.10",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepFracAsyncMap"},
            },
            "access" : "readwrite",
            "default" : "other",
            "description" :
                """If the second TUG-3 within the VC-4 contains a TU-3, this
variable must be set.""",
        }, # column
        "pwCepFracSdhVc4Tu3Map3" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.11",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepFracAsyncMap"},
            },
            "access" : "readwrite",
            "default" : "other",
            "description" :
                """If the third TUG-3 within the VC-4 contains a TU-3, this
variable must be set.""",
        }, # column
        "pwCepFracSdhVc4Tug2Map1" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.12",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSonetVtgMap"},
            },
            "access" : "readwrite",
            "description" :
                """The VC types of the seven TUG-2s within the first
TUG-3 of the VC-4.""",
        }, # column
        "pwCepFracSdhVc4Tug2Map2" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.13",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSonetVtgMap"},
            },
            "access" : "readwrite",
            "description" :
                """The VC types of the seven TUG-2s within the second
TUG-3 of the VC-4.""",
        }, # column
        "pwCepFracSdhVc4Tug2Map3" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.14",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSonetVtgMap"},
            },
            "access" : "readwrite",
            "description" :
                """The VC types of the seven TUG-2s within the third
TUG-3 of the VC-4.""",
        }, # column
        "pwCepFracSdhVc4Ebm1" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.15",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSdhVc4Ebm"},
            },
            "access" : "readwrite",
            "description" :
                """Static Equipped Bit Mask (EBM) for the first TUG-3
within the VC-4.

This variable should be set when 'static' or
'staticWithEbm' fractional VC-4 pwCepFracMode is
selected.





It is possible that the EBM that would be used is
available based on configuration of other MIB modules.
In these cases, this object is read-only and reflects the
actual EBM that would be used.""",
        }, # column
        "pwCepFracSdhVc4Ebm2" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.16",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSdhVc4Ebm"},
            },
            "access" : "readwrite",
            "description" :
                """Static Equipped Bit Mask (EBM) for the second TUG-3
within the VC-4.

This variable should be set when 'static' or
'staticWithEbm' fractional VC-4 pwCepFracMode is
selected.

It is possible that the EBM that would be used is
available based on configuration of other MIB modules.
In these cases, this object is read-only and reflects the
actual EBM that would be used.""",
        }, # column
        "pwCepFracSdhVc4Ebm3" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.17",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSdhVc4Ebm"},
            },
            "access" : "readwrite",
            "description" :
                """Static Equipped Bit Mask (EBM) for the third TUG-3 within
the VC-4.

This variable should be set when 'Static' or
'staticWithEbm' fractional VC-4 pwCepFracMode is
selected.

It is possible that the EBM that would be used is
available based on configuration of other MIB modules.
In these cases, this object is read-only and reflects the
actual EBM that would be used.""",
        }, # column
        "pwCepFracSdhVc4PeerEbm1" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.18",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSdhVc4Ebm"},
            },
            "access" : "readonly",
            "description" :
                """Equipped Bit Mask (EBM) for the first TUG-3 within
the fractional VC-4 channel received from the peer
within the CEP extension header.""",
        }, # column
        "pwCepFracSdhVc4PeerEbm2" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.19",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSdhVc4Ebm"},
            },
            "access" : "readonly",
            "description" :
                """Equipped Bit Mask (EBM) for the second TUG-3 within
the fractional VC-4 channel received from the peer
within the CEP extension header.""",
        }, # column
        "pwCepFracSdhVc4PeerEbm3" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.20",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PW-CEP-STD-MIB", "name" : "PwCepSdhVc4Ebm"},
            },
            "access" : "readonly",
            "description" :
                """Equipped Bit Mask (EBM) for the third TUG-3 within
the fractional VC-4 channel received from the peer
within the CEP extension header.""",
        }, # column
        "pwCepFracRowStatus" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.21",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """For creating, modifying, and deleting this row.
This object MAY be changed at any time.""",
        }, # column
        "pwCepFracStorageType" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.4.1.22",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "StorageType"},
            },
            "access" : "readwrite",
            "default" : "nonVolatile",
            "description" :
                """This variable indicates the storage type for this
object.""",
        }, # column
        "pwCepPerfCurrentTable" : {
            "nodetype" : "table",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5",
            "status" : "current",
            "description" :
                """CEP bridges the SONET and packet worlds.  In the packet
world, counts typically start from the time of service
creation and do not stop.  In the SONET world, counts are
kept in 15-minute intervals.  The PW CEP MIB supports both
methods.  The current 15-minute interval counts are in
this table.  The interval and total stats are in tables
following this.

This table provides per-CEP PW performance information.
High capacity (HC) counters are required for some counts
due to the high speeds expected with CEP services.  A SONET
path of width 48 (STS-48c) can rollover non-HC counters in
a few minutes.""",
        }, # table
        "pwCepPerfCurrentEntry" : {
            "nodetype" : "row",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1",
            "status" : "current",
            "linkage" : [
                "pwIndex",
            ],
            "description" :
                """An entry in this table is created by the agent for every
pwCep entry.  After 15 minutes, the contents of this table
entry are copied to a new entry in the pwCepPerfInterval
table, and the counts in this entry are reset to zero.""",
        }, # row
        "pwCepPerfCurrentDbaInPacketsHC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of DBA packets received.""",
        }, # column
        "pwCepPerfCurrentDbaOutPacketsHC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of DBA packets sent.""",
        }, # column
        "pwCepPerfCurrentInNegPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of negative pointer adjustments sent on the
SONET path based on CEP pointer adjustments received.""",
        }, # column
        "pwCepPerfCurrentInPosPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of positive pointer adjustments sent on the
SONET path based on CEP pointer adjustments received.""",
        }, # column
        "pwCepPerfCurrentInPtrAdjustSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """Number of seconds in which a positive or negative pointer
adjustment was sent on the SONET path.""",
        }, # column
        "pwCepPerfCurrentOutNegPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of negative pointer adjustments seen on the
SONET path and encoded onto sent CEP packets.""",
        }, # column
        "pwCepPerfCurrentOutPosPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of positive pointer adjustments seen on the
SONET path and encoded onto sent CEP packets.""",
        }, # column
        "pwCepPerfCurrentOutPtrAdjustSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """Number of seconds in which a positive or negative pointer
adjustment was seen on the SONET path.""",
        }, # column
        "pwCepPerfCurrentAbsPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """Indicates the relative adjustment drift between
inbound and outbound streams.

It is calculated as absolute value of:
   (InPosPtrAdjust  -   InNegPtrAdjust ) -
   (OutPosPtrAdjust  -   OutNegPtrAdjust)""",
        }, # column
        "pwCepPerfCurrentMissingPkts" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.10",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of missing packets (as detected via CEP header
sequence number gaps).""",
        }, # column
        "pwCepPerfCurrentPktsOoseq" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.11",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected out of sequence (via CEP
header sequence numbers) but successfully reordered.
Note: Some implementations may not support this
feature (see pwCepCfgPktReorder).""",
        }, # column
        "pwCepPerfCurrentPktsOoRngDropped" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.12",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected out of range (via CEP header
sequence numbers) and could not be reordered or could not
fit in the jitter buffer.""",
        }, # column
        "pwCepPerfCurrentJtrBfrUnderruns" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.13",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of times a packet needed to be played out and the
jitter buffer was empty.""",
        }, # column
        "pwCepPerfCurrentPktsMalformed" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.14",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected with unexpected size or bad
headers stack.""",
        }, # column
        "pwCepPerfCurrentSummaryErrors" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.15",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """A summary of all the packet-error types above (from
missing packets to bad length packets).""",
        }, # column
        "pwCepPerfCurrentESs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.16",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of Errored
Seconds encountered.""",
        }, # column
        "pwCepPerfCurrentSESs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.17",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of
Severely Errored Seconds encountered.""",
        }, # column
        "pwCepPerfCurrentUASs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.18",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of
Unavailable Seconds encountered.""",
        }, # column
        "pwCepPerfCurrentFC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.5.1.19",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfCurrentCount"},
            },
            "access" : "readonly",
            "description" :
                """CEP Failure Counts (FC-CEP).  The number of CEP failure
events.  A failure event begins when the LOPS failure
is declared and ends when the failure is cleared.  A
failure event that begins in one period and ends in
another period is counted only in the period in which
it begins.""",
        }, # column
        "pwCepPerfIntervalTable" : {
            "nodetype" : "table",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6",
            "status" : "current",
            "description" :
                """This table provides per-CEP PW performance information,
much like the pwCepPerfCurrentTable above.  However,
these counts represent historical 15-minute intervals.
Typically, this table will have a maximum of 96 entries
for a 24-hour period but is not limited to this.

NOTE: Counter64 objects are used here; Counter32 is
too small for OC-768 CEP PWs.""",
        }, # table
        "pwCepPerfIntervalEntry" : {
            "nodetype" : "row",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "pwIndex",
                "pwCepPerfIntervalNumber",
            ],
            "description" :
                """An entry in this table is created by the agent for
every pwCepPerfCurrentEntry that is 15 minutes old.
The contents of the Current entry are copied to the new





entry here.  The Current entry then resets its counts
to zero for the next current 15-minute interval.
pwCepIndex is found in the pwCepCfg table.""",
        }, # row
        "pwCepPerfIntervalNumber" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "96"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "96"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """A number (between 1 and 96 to cover a 24-hour
period) that identifies the interval for which the set
of statistics is available.  The interval identified by 1
is the most recently completed 15-minute interval, and



the interval identified by N is the interval immediately
preceding the one identified by N-1.  The minimum range of
N is 1 through 4.  The default range is 1 through 32.  The
maximum range of N is 1 through 96.""",
        }, # column
        "pwCepPerfIntervalValidData" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readonly",
            "description" :
                """This variable indicates if the data for this interval
is valid.""",
        }, # column
        "pwCepPerfIntervalReset" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.3",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "reset" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "normal" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """Used in cases where the user knows that the errors
within this interval should not be counted.  Writing
'reset' sets all error counts to zero.  The value of
0 is not used here due to issues with
implementations.""",
        }, # column
        "pwCepPerfIntervalTimeElapsed" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfTimeElapsed"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The duration of a particular interval in seconds.
Adjustments in the system's time-of-day clock may
cause the interval to be greater or less than the
normal value.  Therefore, this actual interval value
is provided.""",
        }, # column
        "pwCepPerfIntervalDbaInPacketsHC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of DBA packets received.""",
        }, # column
        "pwCepPerfIntervalDbaOutPacketsHC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of DBA packets sent.""",
        }, # column
        "pwCepPerfIntervalInNegPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of negative pointer adjustments sent on the
SONET path based on CEP pointer adjustments received.""",
        }, # column
        "pwCepPerfIntervalInPosPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of positive pointer adjustments sent on the
SONET path based on CEP pointer adjustments received.""",
        }, # column
        "pwCepPerfIntervalInPtrAdjustSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """Number of seconds in which a positive or negative
pointer adjustment was sent on the SONET path.""",
        }, # column
        "pwCepPerfIntervalOutNegPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.10",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of negative pointer adjustments seen on the
SONET path and encoded onto sent CEP packets.""",
        }, # column
        "pwCepPerfIntervalOutPosPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.11",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of positive pointer adjustments seen on the
SONET path and encoded onto sent CEP packets.""",
        }, # column
        "pwCepPerfIntervalOutPtrAdjustSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.12",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """Number of seconds in which a positive or negative
pointer adjustment was seen on the SONET path.""",
        }, # column
        "pwCepPerfIntervalAbsPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.13",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """The relative adjustment drift between inbound
and outbound streams.

It is calculated as absolute value of:
   (InPosPtrAdjust  -   InNegPtrAdjust) -
   (OutPosPtrAdjust  -  OutNegPtrAdjust)""",
        }, # column
        "pwCepPerfIntervalMissingPkts" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.14",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of missing packets (as detected via CEP header
sequence number gaps).""",
        }, # column
        "pwCepPerfIntervalPktsOoseq" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.15",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected out of sequence (via CEP
header sequence numbers) but successfully reordered.
Note: Some implementations mat not support this
feature (see pwCepCfgPktReorder).""",
        }, # column
        "pwCepPerfIntervalPktsOoRngDropped" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.16",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected out of range (via CEP
header sequence numbers) and could not be reordered
or could not fit in the jitter buffer.""",
        }, # column
        "pwCepPerfIntervalJtrBfrUnderruns" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.17",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of times a packet needed to be played
out and the jitter buffer was empty.""",
        }, # column
        "pwCepPerfIntervalPktsMalformed" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.18",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected with unexpected size or bad
headers stack.""",
        }, # column
        "pwCepPerfIntervalSummaryErrors" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.19",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """A summary of all the packet-error types above (from
missing packets to bad length packets).""",
        }, # column
        "pwCepPerfIntervalESs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.20",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of Errored
Seconds encountered.""",
        }, # column
        "pwCepPerfIntervalSESs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.21",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of
Severely Errored Seconds encountered.""",
        }, # column
        "pwCepPerfIntervalUASs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.22",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of
Unavailable Seconds encountered.""",
        }, # column
        "pwCepPerfIntervalFC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.6.1.23",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"PerfHist-TC-MIB", "name" : "PerfIntervalCount"},
            },
            "access" : "readonly",
            "description" :
                """CEP Failure Counts (FC-CEP).  The number of CEP failure
events.  A failure event begins when the LOPS failure
is declared and ends when the failure is cleared.  A
failure event that begins in one period and ends in
another period is counted only in the period in which
it begins.""",
        }, # column
        "pwCepPerf1DayIntervalTable" : {
            "nodetype" : "table",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7",
            "status" : "current",
            "description" :
                """This table provides per CEP PW performance information,
the current day's measurement, and the previous day's
interval.

In the extreme case where one of the error counters has
overflowed during the one-day interval, the error counter
MUST NOT wrap around and MUST return the maximum value.""",
        }, # table
        "pwCepPerf1DayIntervalEntry" : {
            "nodetype" : "row",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1",
            "status" : "current",
            "linkage" : [
                "pwIndex",
                "pwCepPerf1DayIntervalNumber",
            ],
            "description" :
                """An entry is created in this table by the agent for
every entry in the pwCepTable and for each day
interval up to the number of supported historical
intervals.""",
        }, # row
        "pwCepPerf1DayIntervalNumber" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Unsigned32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "31"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "31"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """History Data Interval number.  Interval 1 is the current day
measurement period; interval 2 is the most recent previous
day; and interval 30 is 31 days ago.""",
        }, # column
        "pwCepPerf1DayIntervalValidData" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readonly",
            "description" :
                """This variable indicates if the data for this interval
is valid.""",
        }, # column
        "pwCepPerf1DayIntervalMoniSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"HC-PerfHist-TC-MIB", "name" : "HCPerfTimeElapsed"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The amount of time in the 1-day interval over which the
performance monitoring information is actually counted.
This value will be the same as the interval duration except
in situations where performance monitoring data could not
be collected for any reason or the agent clock was
adjusted.""",
        }, # column
        "pwCepPerf1DayIntervalDbaInPacketsHC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter64"},
            },
            "access" : "readonly",
            "description" :
                """Number of DBA packets received.""",
        }, # column
        "pwCepPerf1DayIntervalDbaOutPacketsHC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter64"},
            },
            "access" : "readonly",
            "description" :
                """Number of DBA packets sent.""",
        }, # column
        "pwCepPerf1DayIntervalInNegPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of negative pointer adjustments sent on the
SONET path based on CEP pointer adjustments received.""",
        }, # column
        "pwCepPerf1DayIntervalInPosPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of positive pointer adjustments sent on the
SONET path based on CEP pointer adjustments received.""",
        }, # column
        "pwCepPerf1DayIntervalInPtrAdjustSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """Number of seconds in which a positive or negative pointer
adjustment was sent on the SONET path.""",
        }, # column
        "pwCepPerf1DayIntervalOutNegPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of negative pointer adjustments seen on the
SONET path and encoded onto sent CEP packets.""",
        }, # column
        "pwCepPerf1DayIntervalOutPosPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.10",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of positive pointer adjustments seen on the
SONET path and encoded onto sent CEP packets.""",
        }, # column
        "pwCepPerf1DayIntervalOutPtrAdjustSecs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.11",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """Number of seconds in which a positive or negative pointer
adjustment was seen on the SONET path.""",
        }, # column
        "pwCepPerf1DayIntervalAbsPtrAdjust" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.12",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """The relative adjustment of drift between inbound
and outbound streams.  It is calculated as absolute
value of:
   (InPosPtrAdjust  -   InNegPtrAdjust) -
   (OutPosPtrAdjust  -  OutNegPtrAdjust)""",
        }, # column
        "pwCepPerf1DayIntervalMissingPkts" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.13",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of missing packets (as detected via CEP header
sequence number gaps).""",
        }, # column
        "pwCepPerf1DayIntervalPktsOoseq" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.14",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected out of sequence (via CEP
header sequence numbers) but successfully reordered.
Note: Some implementations may not support this feature
(see pwCepCfgPktReorder).""",
        }, # column
        "pwCepPerf1DayIntervalPktsOoRngDropped" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.15",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected out of range (via CEP header
sequence numbers) and could not be reordered or could not
fit in the jitter buffer.""",
        }, # column
        "pwCepPerf1DayIntervalJtrBfrUnderruns" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.16",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of times a packet needed to be played out, and the
jitter buffer was empty.""",
        }, # column
        "pwCepPerf1DayIntervalPktsMalformed" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.17",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """Number of packets detected with unexpected size or bad
headers stack.""",
        }, # column
        "pwCepPerf1DayIntervalSummaryErrors" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.18",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """A summary of all the packet-error types above (from
missing packets to bad length packets).""",
        }, # column
        "pwCepPerf1DayIntervalESs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.19",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of Errored
Seconds encountered.""",
        }, # column
        "pwCepPerf1DayIntervalSESs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.20",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of Severely
Errored Seconds.  See pwCepCfgMissingPktsToSes.""",
        }, # column
        "pwCepPerf1DayIntervalUASs" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.21",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "units" : "seconds",
            "description" :
                """The counter associated with the number of
unavailable seconds.  See pwCepCfgSesToUAS.

NOTE: When first entering the UAS state, the number
of SesToUas is added to this object; then, as each
additional UAS occurs, this object increments by one.

NOTE: Similar to [RFC3592], if the agent chooses to update
the various performance statistics in real time, it must
be prepared to retroactively reduce the ES and SES counts
(by the value of pwCepCfgSesToUas) and increase the UAS
count (by that same value) when it determines that UAS
state has been entered.""",
        }, # column
        "pwCepPerf1DayIntervalFC" : {
            "nodetype" : "column",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.1.7.1.22",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """CEP Failure Counts (FC-CEP).  The number of CEP failure
events.  A failure event begins when the LOPS failure
is declared and ends when the failure is cleared.""",
        }, # column
        "pwCepConformance" : {
            "nodetype" : "node",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2",
        }, # node
        "pwCepGroups" : {
            "nodetype" : "node",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1",
        }, # node
        "pwCepCompliances" : {
            "nodetype" : "node",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.2",
        }, # node
    }, # nodes

    "groups" : {
        "pwCepGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.1",
            "status" : "current",
            "members" : {
                "pwCepType" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepSonetIfIndex" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepSonetConfigErrorOrStatus" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgIndex" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepTimeElapsed" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepValidIntervals" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepIndications" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepLastEsTimeStamp" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of objects for basic CEP PW config and
status.""",
        }, # group
        "pwCepSignalingGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.2",
            "status" : "current",
            "members" : {
                "pwCepPeerCepOption" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of objects required if the network element
support CEP connections signaling.""",
        }, # group
        "pwCepCfgGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.3",
            "status" : "current",
            "members" : {
                "pwCepCfgIndexNext" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepSonetPayloadLength" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgMinPktLength" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgPktReorder" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgEnableDBA" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgRtpHdrSuppress" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgJtrBfrDepth" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgConsecPktsInsync" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgConsecMissingOutSync" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgPktErrorPlayOutValue" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgMissingPktsToSes" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgSesToUas" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgSecsToExitUas" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgName" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgRowStatus" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgStorageType" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of detailed objects needed to
configure CEP PWs.""",
        }, # group
        "pwCepPerfCurrentGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.4",
            "status" : "current",
            "members" : {
                "pwCepPerfCurrentDbaInPacketsHC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentDbaOutPacketsHC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentInNegPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentInPosPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentInPtrAdjustSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentOutNegPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentOutPosPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentOutPtrAdjustSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentAbsPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentMissingPkts" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentPktsOoseq" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentPktsOoRngDropped" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentJtrBfrUnderruns" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentPktsMalformed" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentSummaryErrors" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentESs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentSESs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentUASs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentFC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of statistics objects for CEP PWs.""",
        }, # group
        "pwCepPerfIntervalGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.5",
            "status" : "current",
            "members" : {
                "pwCepPerfIntervalValidData" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalReset" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalTimeElapsed" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalDbaInPacketsHC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalDbaOutPacketsHC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalInNegPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalInPosPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalInPtrAdjustSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalOutNegPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalOutPosPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalOutPtrAdjustSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalAbsPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalMissingPkts" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalPktsOoseq" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalPktsOoRngDropped" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalJtrBfrUnderruns" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalPktsMalformed" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalSummaryErrors" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalESs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalSESs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalUASs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalFC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of statistics objects for CEP PWs.""",
        }, # group
        "pwCepPerf1DayIntervalGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.6",
            "status" : "current",
            "members" : {
                "pwCepPerf1DayIntervalValidData" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalMoniSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalDbaInPacketsHC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalDbaOutPacketsHC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalInNegPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalInPosPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalInPtrAdjustSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalOutNegPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalOutPosPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalOutPtrAdjustSecs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalAbsPtrAdjust" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalMissingPkts" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalPktsOoseq" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalPktsOoRngDropped" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalJtrBfrUnderruns" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalPktsMalformed" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalSummaryErrors" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalESs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalSESs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalUASs" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalFC" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of statistics objects for CEP PWs.""",
        }, # group
        "pwCepFractionalGroup" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.7",
            "status" : "current",
            "members" : {
                "pwCepFracRowStatus" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracStorageType" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of fractional SPE objects.  These objects
are optional and should be supported only if
fractional SPE is supported within the network
element.""",
        }, # group
        "pwCepFractionalSts1Vc3Group" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.8",
            "status" : "current",
            "members" : {
                "pwCepFracMode" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracConfigError" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracAsync" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracVtgMap" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracEbm" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracPeerEbm" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of fractional STS-1/VC3 objects.  These
objects are optional and should be supported only if
fractional STS-1/VC3 is supported within the network
element.""",
        }, # group
        "pwCepFractionalVc4Group" : {
            "nodetype" : "group",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.1.9",
            "status" : "current",
            "members" : {
                "pwCepFracSdhVc4Mode" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Tu3Map1" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Tu3Map2" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Tu3Map3" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Tug2Map1" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Tug2Map2" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Tug2Map3" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Ebm1" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Ebm2" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4Ebm3" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4PeerEbm1" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4PeerEbm2" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFracSdhVc4PeerEbm3" : {
                    "nodetype" : "member",
                    "module" : "PW-CEP-STD-MIB"
                },
            }, # members
            "description" :
                """Collection of fractional VC4 objects.  These objects
are optional and should be supported only if
fractional VC4 is supported within the network
element.""",
        }, # group
    }, # groups

    "compliances" : {
        "pwCepModuleFullCompliance" : {
            "nodetype" : "compliance",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.2.1",
            "status" : "current",
            "description" :
                """The compliance statement for agents that support
full CEP PW configuration through this MIB module.""",
            "requires" : {
                "pwCepGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFractionalGroup" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support fractional SPE.""",
                },
                "pwCepFractionalSts1Vc3Group" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support the fractional STS-1/VC-3.""",
                },
                "pwCepFractionalVc4Group" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support the fractional VC-4.""",
                },
                "pwCepSignalingGroup" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support the CEP PW signaling.""",
                },
            }, # requires
            "refinements" : {
                "pwCepType" : {
                    "module" : "PW-CEP-STD-MIB",
                    "syntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "spe" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                        },
                    }, # syntax
                    "access" : "readonly",
                    "description" :
                        """The support of the value vt(2) or fracSpe(3) is
optional.  If either of these options are
supported, read-write access is not required.""",
                },
                "pwCepSonetPayloadLength" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only the default values (which are
based on the pwCepType).""",
                },
                "pwCepCfgMinPktLength" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgEnableDBA" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgRtpHdrSuppress" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that do not support RTP header for CEP
connections.""",
                },
                "pwCepCfgConsecPktsInsync" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgConsecMissingOutSync" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgPktErrorPlayOutValue" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgMissingPktsToSes" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgSesToUas" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgSecsToExitUas" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepCfgName" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgRowStatus" : {
                    "module" : "PW-CEP-STD-MIB",
                    "syntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "SNMPv2-TC",
                                "type" : "RowStatus",
                            },
                            "active" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                            "notInService" : {
                                "nodetype" : "namednumber",
                                "number" : "2"
                            },
                            "notReady" : {
                                "nodetype" : "namednumber",
                                "number" : "3"
                            },
                        },
                    }, # syntax
                    "writesyntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "SNMPv2-TC",
                                "type" : "RowStatus",
                            },
                            "active" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                            "notInService" : {
                                "nodetype" : "namednumber",
                                "number" : "2"
                            },
                            "createAndGo" : {
                                "nodetype" : "namednumber",
                                "number" : "4"
                            },
                            "destroy" : {
                                "nodetype" : "namednumber",
                                "number" : "6"
                            },
                        },
                    }, # writesyntax
                    "description" :
                        """Support for createAndWait is not required.""",
                },
                "pwCepFracMode" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracAsync" : {
                    "module" : "PW-CEP-STD-MIB",
                    "syntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "PW-CEP-STD-MIB",
                                "type" : "PwCepFracAsyncMap",
                            },
                            "other" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                        },
                    }, # syntax
                    "access" : "readonly",
                    "description" :
                        """Support for ds3(2) or e3(3) and read-write access
is not required if the implementations do not
support these options.""",
                },
                "pwCepFracVtgMap" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracEbm" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
where the EBM is derived from configuration in
other MIB modules.""",
                },
                "pwCepFracSdhVc4Mode" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Tu3Map1" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Tu3Map2" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Tu3Map3" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Tug2Map1" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Tug2Map2" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Tug2Map3" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
that support only a single predefined value.""",
                },
                "pwCepFracSdhVc4Ebm1" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
where the EBM is derived from configuration in
other MIB modules.""",
                },
                "pwCepFracSdhVc4Ebm2" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
where the EBM is derived from configuration in
other MIB modules.""",
                },
                "pwCepFracSdhVc4Ebm3" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required for implementations
where the EBM is derived from configuration in
other MIB modules.""",
                },
                "pwCepFracRowStatus" : {
                    "module" : "PW-CEP-STD-MIB",
                    "syntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "SNMPv2-TC",
                                "type" : "RowStatus",
                            },
                            "active" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                            "notInService" : {
                                "nodetype" : "namednumber",
                                "number" : "2"
                            },
                            "notReady" : {
                                "nodetype" : "namednumber",
                                "number" : "3"
                            },
                        },
                    }, # syntax
                    "writesyntax" : {
                        "type" :                         {
                            "basetype" : "Enumeration",
                            "parent module" : {
                                "name" : "SNMPv2-TC",
                                "type" : "RowStatus",
                            },
                            "active" : {
                                "nodetype" : "namednumber",
                                "number" : "1"
                            },
                            "notInService" : {
                                "nodetype" : "namednumber",
                                "number" : "2"
                            },
                            "createAndGo" : {
                                "nodetype" : "namednumber",
                                "number" : "4"
                            },
                            "destroy" : {
                                "nodetype" : "namednumber",
                                "number" : "6"
                            },
                        },
                    }, # writesyntax
                    "description" :
                        """Support for createAndWait is not required.""",
                },
            }, # refinements

        }, # compliance
        "pwCepModuleReadOnlyCompliance" : {
            "nodetype" : "compliance",
            "moduleName" : "PW-CEP-STD-MIB",
            "oid" : "1.3.6.1.2.1.200.2.2.2",
            "status" : "current",
            "description" :
                """The compliance statement for agents that provide
read-only support for the PW CEP MIB Module.  Such
devices can be monitored but cannot be configured
using this MIB module.""",
            "requires" : {
                "pwCepGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepCfgGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfCurrentGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerfIntervalGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepPerf1DayIntervalGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "PW-CEP-STD-MIB"
                },
                "pwCepFractionalGroup" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support fractional SPE.""",
                },
                "pwCepFractionalSts1Vc3Group" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support the fractional STS-1/VC-3.""",
                },
                "pwCepFractionalVc4Group" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support the fractional VC-4.""",
                },
                "pwCepSignalingGroup" : {
                    "nodetype" : "optional",
                    "module" : "PW-CEP-STD-MIB",
                    "description" :
                        """This group is only mandatory for implementations
that support the CEP PW signaling.""",
                },
            }, # requires
            "refinements" : {
                "pwCepType" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepSonetIfIndex" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgIndex" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepSonetPayloadLength" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgMinPktLength" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgEnableDBA" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgRtpHdrSuppress" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgJtrBfrDepth" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgConsecPktsInsync" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgConsecMissingOutSync" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgPktErrorPlayOutValue" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgMissingPktsToSes" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgSesToUas" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgSecsToExitUas" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgRowStatus" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepCfgStorageType" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracMode" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracAsync" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracVtgMap" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracEbm" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Mode" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Tu3Map1" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Tu3Map2" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Tu3Map3" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Tug2Map1" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Tug2Map2" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Tug2Map3" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Ebm1" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Ebm2" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracSdhVc4Ebm3" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracRowStatus" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
                "pwCepFracStorageType" : {
                    "module" : "PW-CEP-STD-MIB",
                    "access" : "readonly",
                    "description" :
                        """Write access is not required.""",
                },
            }, # refinements

        }, # compliance
    }, # compliances

}
