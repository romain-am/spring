# python version 1.0						DO NOT EDIT
#
# This python file has been generated by smidump version 0.5.0:
#
#   smidump -f python FLOW-METER-MIB

FILENAME = "./libsmi-0.5.0/mibs/ietf/FLOW-METER-MIB"

MIB = {
    "moduleName" : "FLOW-METER-MIB",

    "FLOW-METER-MIB" : {
        "nodetype" : "module",
        "language" : "SMIv2",
        "organization" :    
            """IETF Realtime Traffic Flow Measurement Working Group""",
        "contact" : 
            """Nevil Brownlee, The University of Auckland

Postal: Information Technology Sytems & Services
        The University of Auckland
        Private Bag 92-019
        Auckland, New Zealand

Phone:  +64 9 373 7599 x8941
E-mail: n.brownlee@auckland.ac.nz""",
        "description" :
            """MIB for the RTFM Traffic Flow Meter.""",
        "revisions" : (
            {
                "date" : "1999-10-25 00:00",
                "description" :
                    """Initial Version, published as RFC 2720.""",
            },
            {
                "date" : "1999-08-30 12:50",
                "description" :
                    """UTF8OwnerString Textual Convention added, and used to
replace OwnerString.  Conceptually the same as OwnerString,
but facilitating internationalisation by using UTF-8
encoding for its characters rather than US-ASCII.""",
            },
            {
                "date" : "1999-08-19 10:10",
                "description" :
                    """Changes to SIZE specification for two variables:
- flowRuleInfoName SIZE specified as (0..127)
- flowRuleIndex SIZE increased to (1..2147483647)""",
            },
            {
                "date" : "1997-12-23 09:37",
                "description" :
                    """Two further variables deprecated:
- flowRuleInfoRulesReady (use flowRuleInfoStatus intead)
- flowDataStatus (contains no useful information)""",
            },
            {
                "date" : "1997-07-07 17:15",
                "description" :
                    """Significant changes since RFC 2064 include:
- flowDataPackageTable added
- flowColumnActivityTable deprecated
- flowManagerCounterWrap deprecated""",
            },
            {
                "date" : "1996-03-08 02:08",
                "description" :
                    """Initial version of this MIB (RFC 2064)""",
            },
        ),
        "identity node" : "flowMIB",
    },

    "imports" : (
        {"module" : "SNMPv2-SMI", "name" : "MODULE-IDENTITY"},
        {"module" : "SNMPv2-SMI", "name" : "OBJECT-TYPE"},
        {"module" : "SNMPv2-SMI", "name" : "Counter32"},
        {"module" : "SNMPv2-SMI", "name" : "Counter64"},
        {"module" : "SNMPv2-SMI", "name" : "Integer32"},
        {"module" : "SNMPv2-SMI", "name" : "mib-2"},
        {"module" : "SNMPv2-TC", "name" : "TEXTUAL-CONVENTION"},
        {"module" : "SNMPv2-TC", "name" : "RowStatus"},
        {"module" : "SNMPv2-TC", "name" : "TimeStamp"},
        {"module" : "SNMPv2-TC", "name" : "TruthValue"},
        {"module" : "SNMPv2-CONF", "name" : "OBJECT-GROUP"},
        {"module" : "SNMPv2-CONF", "name" : "MODULE-COMPLIANCE"},
        {"module" : "IF-MIB", "name" : "ifIndex"},
        {"module" : "RMON2-MIB", "name" : "TimeFilter"},
    ),

    "typedefs" : {
        "UTF8OwnerString" : {
            "basetype" : "OctetString",
            "status" : "current",
            "ranges" : [
            {
                "min" : "0",
                "max" : "127"
            },
            ],
            "range" : {
                "min" : "0",
                "max" : "127"
            },
            "format" : "127t",
            "description" :
                """An administratively assigned name for the owner of a
resource, conceptually the same as OwnerString in the RMON
MIB [RMON-MIB].

To facilitate internationalisation, this name information
is represented using the ISO/IEC IS 10646-1 character set,
encoded as an octet string using the UTF-8 transformation
format described in the UTF-8 standard [UTF-8].""",
        },
        "PeerType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "ipv4" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "ipv6" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "nsap" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "ipx" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "appletalk" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "decnet" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "description" :
                """Indicates the type of a PeerAddress (see below).  The values
used are from the 'Address Family Numbers' section of the
Assigned Numbers RFC [ASG-NBR].  Peer types from other address
families may also be used, provided only that they are
identified by their assigned Address Family numbers.""",
        },
        "PeerAddress" : {
            "basetype" : "OctetString",
            "status" : "current",
            "ranges" : [
            {
                "min" : "3",
                "max" : "20"
            },
            ],
            "range" : {
                "min" : "3",
                "max" : "20"
            },
            "description" :
                """Specifies the value of a peer address for various network
protocols.  Address format depends on the actual protocol,
as indicated below:

IPv4:        ipv4(1)
    4-octet IpAddress  (defined in the SNMPv2 SMI [RFC2578])

IPv6:        ipv6(2)
    16-octet IpAddress  (defined in the
                            IPv6 Addressing RFC [V6-ADDR])

CLNS:        nsap(3)
    NsapAddress  (defined in the SNMPv2 SMI [RFC2578])

Novell:      ipx(11)
    4-octet Network number,
    6-octet Host number (MAC address)

AppleTalk:   appletalk(12)
    2-octet Network number (sixteen bits),
    1-octet Host number (eight bits)

DECnet:      decnet(13)
    1-octet Area number (in low-order six bits),
    2-octet Host number (in low-order ten bits)""",
        },
        "AdjacentType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "ip" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "nsap" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "ethernet" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "tokenring" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "ipx" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "appletalk" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "decnet" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "fddi" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "description" :
                """Indicates the type of an adjacent address.  May be a medium
type or (if metering is taking place inside a tunnel) a
PeerType (see above).

The values used for IEEE 802 medium types are from the 'Network
Management Parameters (ifType definitions)' section of the
Assigned Numbers RFC [ASG-NBR].  Other medium types may also
be used, provided only that they are identified by their
assigned ifType numbers.""",
        },
        "AdjacentAddress" : {
            "basetype" : "OctetString",
            "status" : "current",
            "ranges" : [
            {
                "min" : "3",
                "max" : "20"
            },
            ],
            "range" : {
                "min" : "3",
                "max" : "20"
            },
            "description" :
                """Specifies the value of an adjacent address.  May be a Medium
Access Control (MAC) address or (if metering is taking place
inside a tunnel) a PeerAddress (see above).

MAC Address format depends on the actual medium, as follows:

Ethernet:     ethernet(7)
    6-octet 802.3 MAC address in 'canonical' order
Token Ring:   tokenring(9)
    6-octet 802.5 MAC address in 'canonical' order

FDDI:         fddi(15)
    FddiMACLongAddress, i.e. a 6-octet MAC address
    in 'canonical' order  (defined in [FDDI-MIB])""",
        },
        "TransportType" : {
            "basetype" : "Integer32",
            "status" : "current",
            "ranges" : [
            {
                "min" : "1",
                "max" : "255"
            },
            ],
            "range" : {
                "min" : "1",
                "max" : "255"
            },
            "description" :
                """Indicates the type of a TransportAddress (see below).  Values
will depend on the actual protocol; for IP they will be those
given in the 'Protocol Numbers' section of the  Assigned Numbers
RFC [ASG-NBR], including icmp(1), tcp(6) and udp(17).""",
        },
        "TransportAddress" : {
            "basetype" : "OctetString",
            "status" : "current",
            "ranges" : [
            {
                "min" : "2",
                "max" : "2"
            },
            ],
            "range" : {
                "min" : "2",
                "max" : "2"
            },
            "description" :
                """Specifies the value of a transport address for various
network protocols.  Format as follows:

IP:
    2-octet UDP or TCP port number

Other protocols:
    2-octet port number""",
        },
        "RuleAddress" : {
            "basetype" : "OctetString",
            "status" : "current",
            "ranges" : [
            {
                "min" : "2",
                "max" : "20"
            },
            ],
            "range" : {
                "min" : "2",
                "max" : "20"
            },
            "description" :
                """Specifies the value of an address.  Is a superset of
MediumAddress, PeerAddress and TransportAddress.""",
        },
        "FlowAttributeNumber" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "flowIndex" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "flowStatus" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "flowTimeMark" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "sourceInterface" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "sourceAdjacentType" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "sourceAdjacentAddress" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "sourceAdjacentMask" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "sourcePeerType" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "sourcePeerAddress" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "sourcePeerMask" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "sourceTransType" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "sourceTransAddress" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "sourceTransMask" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "destInterface" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "destAdjacentType" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "destAdjacentAddress" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "destAdjacentMask" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "destPeerType" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "destPeerAddress" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "destPeerMask" : {
                "nodetype" : "namednumber",
                "number" : "20"
            },
            "destTransType" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "destTransAddress" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "destTransMask" : {
                "nodetype" : "namednumber",
                "number" : "23"
            },
            "pduScale" : {
                "nodetype" : "namednumber",
                "number" : "24"
            },
            "octetScale" : {
                "nodetype" : "namednumber",
                "number" : "25"
            },
            "ruleSet" : {
                "nodetype" : "namednumber",
                "number" : "26"
            },
            "toOctets" : {
                "nodetype" : "namednumber",
                "number" : "27"
            },
            "toPDUs" : {
                "nodetype" : "namednumber",
                "number" : "28"
            },
            "fromOctets" : {
                "nodetype" : "namednumber",
                "number" : "29"
            },
            "fromPDUs" : {
                "nodetype" : "namednumber",
                "number" : "30"
            },
            "firstTime" : {
                "nodetype" : "namednumber",
                "number" : "31"
            },
            "lastActiveTime" : {
                "nodetype" : "namednumber",
                "number" : "32"
            },
            "sourceSubscriberID" : {
                "nodetype" : "namednumber",
                "number" : "33"
            },
            "destSubscriberID" : {
                "nodetype" : "namednumber",
                "number" : "34"
            },
            "sessionID" : {
                "nodetype" : "namednumber",
                "number" : "35"
            },
            "sourceClass" : {
                "nodetype" : "namednumber",
                "number" : "36"
            },
            "destClass" : {
                "nodetype" : "namednumber",
                "number" : "37"
            },
            "flowClass" : {
                "nodetype" : "namednumber",
                "number" : "38"
            },
            "sourceKind" : {
                "nodetype" : "namednumber",
                "number" : "39"
            },
            "destKind" : {
                "nodetype" : "namednumber",
                "number" : "40"
            },
            "flowKind" : {
                "nodetype" : "namednumber",
                "number" : "41"
            },
            "description" :
                """Uniquely identifies an attribute within a flow data record.""",
        },
        "RuleAttributeNumber" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "null" : {
                "nodetype" : "namednumber",
                "number" : "0"
            },
            "sourceInterface" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "sourceAdjacentType" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "sourceAdjacentAddress" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "sourcePeerType" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "sourcePeerAddress" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "sourceTransType" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "sourceTransAddress" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "destInterface" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "destAdjacentType" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "destAdjacentAddress" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "destPeerType" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "destPeerAddress" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "destTransType" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "destTransAddress" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "sourceSubscriberID" : {
                "nodetype" : "namednumber",
                "number" : "33"
            },
            "destSubscriberID" : {
                "nodetype" : "namednumber",
                "number" : "34"
            },
            "sessionID" : {
                "nodetype" : "namednumber",
                "number" : "35"
            },
            "sourceClass" : {
                "nodetype" : "namednumber",
                "number" : "36"
            },
            "destClass" : {
                "nodetype" : "namednumber",
                "number" : "37"
            },
            "flowClass" : {
                "nodetype" : "namednumber",
                "number" : "38"
            },
            "sourceKind" : {
                "nodetype" : "namednumber",
                "number" : "39"
            },
            "destKind" : {
                "nodetype" : "namednumber",
                "number" : "40"
            },
            "flowKind" : {
                "nodetype" : "namednumber",
                "number" : "41"
            },
            "matchingStoD" : {
                "nodetype" : "namednumber",
                "number" : "50"
            },
            "v1" : {
                "nodetype" : "namednumber",
                "number" : "51"
            },
            "v2" : {
                "nodetype" : "namednumber",
                "number" : "52"
            },
            "v3" : {
                "nodetype" : "namednumber",
                "number" : "53"
            },
            "v4" : {
                "nodetype" : "namednumber",
                "number" : "54"
            },
            "v5" : {
                "nodetype" : "namednumber",
                "number" : "55"
            },
            "description" :
                """Uniquely identifies an attribute which may be tested in
a rule.  These include attributes whose values come directly
from (or are computed from) the flow's packets, and the five
'meter' variables used to hold an Attribute Number.""",
        },
        "ActionNumber" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "ignore" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "noMatch" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "count" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "countPkt" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "return" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "gosub" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "gosubAct" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "assign" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "assignAct" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "goto" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "gotoAct" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "pushRuleTo" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "pushRuleToAct" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "pushPktTo" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "pushPktToAct" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "popTo" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "popToAct" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "description" :
                """Uniquely identifies the action of a rule, i.e. the Pattern
Matching Engine's opcode number.  Details of the opcodes
are given in the 'Traffic Flow Measurement: Architecture'
document [RTFM-ARC].""",
        },
    }, # typedefs

    "nodes" : {
        "flowMIB" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40",
            "status" : "current",
        }, # node
        "flowControl" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1",
        }, # node
        "flowRuleSetInfoTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1",
            "status" : "current",
            "description" :
                """An array of information about the RuleSets held in the
meter.

Any manager may configure a new RuleSet for the meter by
creating a row in this table with status active(1), and setting
values for all the objects in its rules.  At this stage the new
RuleSet is available but not 'running', i.e. it is not being
used by the meter to produce entries in the flow table.

To actually 'run' a RuleSet a manager must create a row in
the flowManagerInfoTable, set it's flowManagerStatus to
active(1), and set either its CurrentRuleSet or StandbyRuleSet
to point to the RuleSet to be run.

Once a RuleSet is running a manager may not change any of the
objects within the RuleSet itself.  Any attempt to do so should
result in a notWritable(17) SNMP error-status for such objects.

A manager may stop a RuleSet running by removing all
references to it in the flowManagerInfoTable (i.e. by setting
CurrentRuleSet and StandbyRuleSet values to 0).  This provides
a way to stop RuleSets left running if a manager fails.
For example, when a manager is started, it could search the
meter's flowManager table and stop all RuleSets having a
specified value of flowRuleInfoOwner.

To prevent a manager from interfering with variables belonging
to another manager, the meter should use MIB views [RFC2575] so
as to limit each manager's access to the meter's variables,
effectively dividing the single meter into several virtual
meters, one for each independent manager.""",
        }, # table
        "flowRuleSetInfoEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "flowRuleInfoIndex",
            ],
            "description" :
                """Information about a particular RuleSet.""",
        }, # row
        "flowRuleInfoIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """An index which selects an entry in the flowRuleSetInfoTable.
Each such entry contains control information for a particular
RuleSet which the meter may run.""",
        }, # column
        "flowRuleInfoSize" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readwrite",
            "description" :
                """Number of rules in this RuleSet.  Setting this variable will
cause the meter to allocate space for these rules.""",
        }, # column
        "flowRuleInfoOwner" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "UTF8OwnerString"},
            },
            "access" : "readwrite",
            "description" :
                """Identifies the manager which 'owns' this RuleSet.  A manager
must set this variable when creating a row in this table.""",
        }, # column
        "flowRuleInfoTimeStamp" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readonly",
            "description" :
                """Time this row's associated RuleSet was last changed.""",
        }, # column
        "flowRuleInfoStatus" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """The status of this flowRuleSetInfoEntry. If this value is
not active(1) the meter must not attempt to use the row's
associated RuleSet.  Once its value has been set to active(1)
a manager may not change any of the other variables in the
row, nor the contents of the associated RuleSet.  Any attempt
to do so should result in a notWritable(17) SNMP error-status
for such variables or objects.

To download a RuleSet, a manger could:
   - Locate an open slot in the RuleSetInfoTable.
   - Create a RuleSetInfoEntry by setting the status for this
       open slot to createAndWait(5).
   - Set flowRuleInfoSize and flowRuleInfoName as required.
   - Download the rules into the row's rule table.
   - Set flowRuleInfoStatus to active(1).

The RuleSet would then be ready to run. The manager is not
allowed to change the value of flowRuleInfoStatus from
active(1) if the associated RuleSet is being referenced by any
of the entries in the flowManagerInfoTable.

Setting RuleInfoStatus to destroy(6) destroys the associated
RuleSet together with any flow data collected by it.""",
        }, # column
        "flowRuleInfoName" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.6",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "OctetString",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "127"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "127"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """An alphanumeric identifier used by managers and readers to
identify a RuleSet.  For example, a manager wishing to run a
RuleSet named WWW-FLOWS could search the flowRuleSetInfoTable
to see whether the WWW-FLOWS RuleSet is already available on
the meter.

Note that references to RuleSets in the flowManagerInfoTable
use indexes for their flowRuleSetInfoTable entries.  These may
be different each time the RuleSet is loaded into a meter.""",
        }, # column
        "flowRuleInfoRulesReady" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.7",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readwrite",
            "description" :
                """Indicates whether the rules for this row's associated RuleSet
are ready for use.  The meter will refuse to 'run' the RuleSet
unless this variable has been set to true(1).
While RulesReady is false(2), the manager may modify the
RuleSet, for example by downloading rules into it.""",
        }, # column
        "flowRuleInfoFlowRecords" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.1.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """The number of entries in the flow table for this RuleSet.
These may be current (waiting for collection by one or more
meter readers) or idle (waiting for the meter to recover
their memory).""",
        }, # column
        "flowInterfaceTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.2",
            "status" : "current",
            "description" :
                """An array of information specific to each meter interface.""",
        }, # table
        "flowInterfaceEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.2.1",
            "status" : "current",
            "linkage" : [
                "ifIndex",
            ],
            "description" :
                """Information about a particular interface.""",
        }, # row
        "flowInterfaceSampleRate" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.2.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readwrite",
            "default" : "1",
            "description" :
                """The parameter N for statistical counting on this interface.
Set to N to count 1/Nth of the packets appearing at this
interface.  A sampling rate of 1 counts all packets.
A sampling rate of 0 results in the interface being ignored
by the meter.

A meter should choose its own algorithm to introduce variance
into the sampling so that exactly every Nth packet is counted.
The IPPM Working Group's RFC 'Framework for IP Performance
Metrics' [IPPM-FRM] explains why this should be done, and sets
out an algorithm for doing it.""",
        }, # column
        "flowInterfaceLostPackets" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.2.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter32"},
            },
            "access" : "readonly",
            "description" :
                """The number of packets the meter has lost for this interface.
Such losses may occur because the meter has been unable to
keep up with the traffic volume.""",
        }, # column
        "flowReaderInfoTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3",
            "status" : "current",
            "description" :
                """An array of information about meter readers which have
registered their intent to collect flow data from this meter.""",
        }, # table
        "flowReaderInfoEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "flowReaderIndex",
            ],
            "description" :
                """Information about a particular meter reader.""",
        }, # row
        "flowReaderIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """An index which selects an entry in the flowReaderInfoTable.""",
        }, # column
        "flowReaderTimeout" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readwrite",
            "description" :
                """Specifies the maximum time (in seconds) between flow data
collections for this meter reader.  If this time elapses
without a collection, the meter should assume that this meter
reader has stopped collecting, and delete this row from the
table.  A value of zero indicates that this row should not be
timed out.""",
        }, # column
        "flowReaderOwner" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "UTF8OwnerString"},
            },
            "access" : "readwrite",
            "description" :
                """Identifies the meter reader which created this row.""",
        }, # column
        "flowReaderLastTime" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readwrite",
            "description" :
                """Time this meter reader began its most recent data collection.

This variable should be written by a meter reader as its first
step in reading flow data.  The meter will set this LastTime
value to its current Uptime, and set its PreviousTime value
(below) to the old  LastTime.  This allows the meter to
recover flows which have been inactive since PreviousTime,
for these have been collected at least once.

If the meter reader fails to write flowLastReadTime, collection
may still proceed but the meter may not be able to recover
inactive flows until the flowReaderTimeout has been reached
for this entry.""",
        }, # column
        "flowReaderPreviousTime" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readonly",
            "description" :
                """Time this meter reader began the collection before last.""",
        }, # column
        "flowReaderStatus" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """The status of this FlowReaderInfoEntry. A value of active(1)
implies that the associated reader should be collecting data
from the meter.  Once this variable has been set to active(1)
a manager may only change this row's flowReaderLastTime and
flowReaderTimeout variables.""",
        }, # column
        "flowReaderRuleSet" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.3.1.7",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """An index to the array of RuleSets.  Specifies a set of rules
of interest to this meter reader.  The reader will attempt to
collect any data generated by the meter for this RuleSet, and
the meter will not recover the memory of any of the RuleSet's
flows until this collection has taken place.  Note that a
reader may have entries in this table for several RuleSets.""",
        }, # column
        "flowManagerInfoTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4",
            "status" : "current",
            "description" :
                """An array of information about managers which have
registered their intent to run RuleSets on this meter.""",
        }, # table
        "flowManagerInfoEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1",
            "create" : "true",
            "status" : "current",
            "linkage" : [
                "flowManagerIndex",
            ],
            "description" :
                """Information about a particular meter 'task.'  By creating
an entry in this table and activating it, a manager requests
that the meter 'run' the indicated RuleSet.

The entry also specifies a HighWaterMark and a StandbyRuleSet.
If the meter's flow table usage exceeds this task's
HighWaterMark the meter will stop running the task's
CurrentRuleSet and switch to its StandbyRuleSet.

If the value of the task's StandbyRuleSet is 0 when its
HighWaterMark is exceeded, the meter simply stops running the
task's CurrentRuleSet.  By careful selection of HighWaterMarks
for the various tasks a manager can ensure that the most
critical RuleSets are the last to stop running as the number
of flows increases.

When a manager has determined that the demand for flow table
space has abated, it may cause the task to switch back to its
CurrentRuleSet by setting its flowManagerRunningStandby
variable to false(2).""",
        }, # row
        "flowManagerIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """An index which selects an entry in the flowManagerInfoTable.""",
        }, # column
        "flowManagerCurrentRuleSet" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readwrite",
            "description" :
                """Index to the array of RuleSets.  Specifies which set of
rules is the 'current' one for this task.  The meter will
be 'running' the current RuleSet if this row's
flowManagerRunningStandby value is false(2).

When the manager sets this variable the meter will stop using
the task's old current RuleSet and start using the new one.
Specifying RuleSet 0 (the empty set) stops flow measurement
for this task.""",
        }, # column
        "flowManagerStandbyRuleSet" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readwrite",
            "default" : "0",
            "description" :
                """Index to the array of RuleSets.  After reaching HighWaterMark
(see below) the manager will switch to using the task's
StandbyRuleSet in place of its CurrentRuleSet.  For this to be
effective the designated StandbyRuleSet should have a coarser
reporting granularity then the CurrentRuleSet.  The manager may
also need to decrease the meter reading interval so that the
meter can recover flows measured by this task's CurrentRuleSet.""",
        }, # column
        "flowManagerHighWaterMark" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.4",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "100"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "100"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """A value expressed as a percentage, interpreted by the meter
as an indication of how full the flow table should be before
it should switch to the standby RuleSet (if one has been
specified) for this task.  Values of 0% or 100% disable the
checking represented by this variable.""",
        }, # column
        "flowManagerCounterWrap" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.5",
            "status" : "deprecated",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "wrap" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "scale" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                },
            },
            "access" : "readwrite",
            "default" : "wrap",
            "description" :
                """Specifies whether PDU and octet counters should wrap when
they reach the top of their range (normal behaviour for
Counter64 objects), or whether their scale factors should
be used instead.  The combination of counter and scale
factor allows counts to be returned as non-negative binary
floating point numbers, with 64-bit mantissas and 8-bit
exponents.""",
        }, # column
        "flowManagerOwner" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "UTF8OwnerString"},
            },
            "access" : "readwrite",
            "description" :
                """Identifies the manager which created this row.""",
        }, # column
        "flowManagerTimeStamp" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readonly",
            "description" :
                """Time this row was last changed by its manager.""",
        }, # column
        "flowManagerStatus" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "RowStatus"},
            },
            "access" : "readwrite",
            "description" :
                """The status of this row in the flowManagerInfoTable.  A value
of active(1) implies that this task may be activated, by
setting its CurrentRuleSet and StandbyRuleSet variables.
Its HighWaterMark and RunningStandby variables may also be
changed.""",
        }, # column
        "flowManagerRunningStandby" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.4.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readwrite",
            "default" : "false",
            "description" :
                """Set to true(1) by the meter to indicate that it has switched
to runnning this task's StandbyRuleSet in place of its
CurrentRuleSet.  To switch back to the CurrentRuleSet, the
manager may simply set this variable to false(2).""",
        }, # column
        "flowFloodMark" : {
            "nodetype" : "scalar",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.5",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "100"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "100"
                    },
                },
            },
            "access" : "readwrite",
            "default" : "95",
            "description" :
                """A value expressed as a percentage, interpreted by the meter
as an indication of how full the flow table should be before
it should take some action to avoid running out of resources
to handle new flows, as discussed in section 4.6 (Handling
Increasing Traffic Levels) of the RTFM Architecture RFC
[RTFM-ARC].

Values of 0% or 100% disable the checking represented by
this variable.""",
        }, # scalar
        "flowInactivityTimeout" : {
            "nodetype" : "scalar",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readwrite",
            "default" : "600",
            "description" :
                """The time in seconds since the last packet seen, after which
a flow becomes 'idle.'  Note that although a flow may be
idle, it will not be discarded (and its memory recovered)
until after its data has been collected by all the meter
readers registered for its RuleSet.""",
        }, # scalar
        "flowActiveFlows" : {
            "nodetype" : "scalar",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """The number of flows which are currently in use.""",
        }, # scalar
        "flowMaxFlows" : {
            "nodetype" : "scalar",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """The maximum number of flows allowed in the meter's
flow table.  At present this is determined when the meter
is first started up.""",
        }, # scalar
        "flowFloodMode" : {
            "nodetype" : "scalar",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TruthValue"},
            },
            "access" : "readwrite",
            "description" :
                """Indicates that the meter has passed its FloodMark and is
not running in its normal mode.

When the manager notices this it should take action to remedy
the problem which caused the flooding.  It should then monitor
flowActiveFlows so as to determine when the flood has receded.
At that point the manager may set flowFloodMode to false(2) to
resume normal operation.""",
        }, # scalar
        "flowData" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2",
        }, # node
        "flowDataTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1",
            "status" : "current",
            "description" :
                """The list of all flows being measured.""",
        }, # table
        "flowDataEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1",
            "status" : "current",
            "linkage" : [
                "flowDataRuleSet",
                "flowDataTimeMark",
                "flowDataIndex",
            ],
            "description" :
                """The flow data record for a particular flow.""",
        }, # row
        "flowDataIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """Value of this flow data record's index within the meter's
flow table.""",
        }, # column
        "flowDataTimeMark" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.2",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"RMON2-MIB", "name" : "TimeFilter"},
            },
            "access" : "noaccess",
            "description" :
                """A TimeFilter for this entry.  Allows GetNext and GetBulk
to find flow table rows which have changed since a specified
value of the meter's Uptime.""",
        }, # column
        "flowDataStatus" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.3",
            "status" : "deprecated",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "inactive" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "current" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Status of this flow data record.""",
        }, # column
        "flowDataSourceInterface" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """Index of the interface associated with the source address
for this flow.  It's value is one of those contained in the
ifIndex field of the meter's interfaces table.""",
        }, # column
        "flowDataSourceAdjacentType" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "AdjacentType"},
            },
            "access" : "readonly",
            "description" :
                """Adjacent address type of the source for this flow.

If metering is being performed at the network level,
AdjacentType will indicate the medium for the interface on
which the flow was observed and AdjacentAddress will be the
MAC address for that interface.  This is the usual case.

If traffic is being metered inside a tunnel, AdjacentType will
be the peer type of the host at the end of the tunnel and
AdjacentAddress will be the peer address for that host.""",
        }, # column
        "flowDataSourceAdjacentAddress" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "AdjacentAddress"},
            },
            "access" : "readonly",
            "description" :
                """Address of the adjacent device on the path for the source
for this flow.""",
        }, # column
        "flowDataSourceAdjacentMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.7",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "AdjacentAddress"},
            },
            "access" : "readonly",
            "description" :
                """1-bits in this mask indicate which bits must match when
comparing the adjacent source address for this flow.""",
        }, # column
        "flowDataSourcePeerType" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.8",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "PeerType"},
            },
            "access" : "readonly",
            "description" :
                """Peer address type of the source for this flow.""",
        }, # column
        "flowDataSourcePeerAddress" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.9",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "PeerAddress"},
            },
            "access" : "readonly",
            "description" :
                """Address of the peer device for the source of this flow.""",
        }, # column
        "flowDataSourcePeerMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.10",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "PeerAddress"},
            },
            "access" : "readonly",
            "description" :
                """1-bits in this mask indicate which bits must match when
comparing the source peer address for this flow.""",
        }, # column
        "flowDataSourceTransType" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.11",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "TransportType"},
            },
            "access" : "readonly",
            "description" :
                """Transport address type of the source for this flow.  The
value of this attribute will depend on the peer address type.""",
        }, # column
        "flowDataSourceTransAddress" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.12",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "TransportAddress"},
            },
            "access" : "readonly",
            "description" :
                """Transport address for the source of this flow.""",
        }, # column
        "flowDataSourceTransMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.13",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "TransportAddress"},
            },
            "access" : "readonly",
            "description" :
                """1-bits in this mask indicate which bits must match when
comparing the transport source address for this flow.""",
        }, # column
        "flowDataDestInterface" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.14",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """Index of the interface associated with the dest address for
this flow.  This value is one of the values contained in the
ifIndex field of the interfaces table.""",
        }, # column
        "flowDataDestAdjacentType" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.15",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "AdjacentType"},
            },
            "access" : "readonly",
            "description" :
                """Adjacent address type of the destination for this flow.""",
        }, # column
        "flowDataDestAdjacentAddress" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.16",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "AdjacentAddress"},
            },
            "access" : "readonly",
            "description" :
                """Address of the adjacent device on the path for the
destination for this flow.""",
        }, # column
        "flowDataDestAdjacentMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.17",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "AdjacentAddress"},
            },
            "access" : "readonly",
            "description" :
                """1-bits in this mask indicate which bits must match when
comparing the adjacent destination address for this flow.""",
        }, # column
        "flowDataDestPeerType" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.18",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "PeerType"},
            },
            "access" : "readonly",
            "description" :
                """Peer address type of the destination for this flow.""",
        }, # column
        "flowDataDestPeerAddress" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.19",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "PeerAddress"},
            },
            "access" : "readonly",
            "description" :
                """Address of the peer device for the destination of this flow.""",
        }, # column
        "flowDataDestPeerMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.20",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "PeerAddress"},
            },
            "access" : "readonly",
            "description" :
                """1-bits in this mask indicate which bits must match when
comparing the destination peer type for this flow.""",
        }, # column
        "flowDataDestTransType" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.21",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "TransportType"},
            },
            "access" : "readonly",
            "description" :
                """Transport address type of the destination for this flow.  The
value of this attribute will depend on the peer address type.""",
        }, # column
        "flowDataDestTransAddress" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.22",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "TransportAddress"},
            },
            "access" : "readonly",
            "description" :
                """Transport address for the destination of this flow.""",
        }, # column
        "flowDataDestTransMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.23",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "TransportAddress"},
            },
            "access" : "readonly",
            "description" :
                """1-bits in this mask indicate which bits must match when
comparing the transport destination address for this flow.""",
        }, # column
        "flowDataPDUScale" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.24",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """The scale factor applied to this particular flow.  Indicates
the number of bits the PDU counter values should be moved left
to obtain the actual values.""",
        }, # column
        "flowDataOctetScale" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.25",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "0",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "0",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """The scale factor applied to this particular flow.  Indicates
the number of bits the octet counter values should be moved
left to obtain the actual values.""",
        }, # column
        "flowDataRuleSet" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.26",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """The RuleSet number of the RuleSet which created this flow.
Allows a manager to use GetNext or GetBulk requests to find
flows belonging to a particular RuleSet.""",
        }, # column
        "flowDataToOctets" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.27",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter64"},
            },
            "access" : "readonly",
            "description" :
                """The count of octets flowing from source to destination
for this flow.""",
        }, # column
        "flowDataToPDUs" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.28",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter64"},
            },
            "access" : "readonly",
            "description" :
                """The count of packets flowing from source to destination
for this flow.""",
        }, # column
        "flowDataFromOctets" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.29",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter64"},
            },
            "access" : "readonly",
            "description" :
                """The count of octets flowing from destination to source
for this flow.""",
        }, # column
        "flowDataFromPDUs" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.30",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-SMI", "name" : "Counter64"},
            },
            "access" : "readonly",
            "description" :
                """The count of packets flowing from destination to source
for this flow.""",
        }, # column
        "flowDataFirstTime" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.31",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readonly",
            "description" :
                """The time at which this flow was first entered in the table""",
        }, # column
        "flowDataLastActiveTime" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.32",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"SNMPv2-TC", "name" : "TimeStamp"},
            },
            "access" : "readonly",
            "description" :
                """The last time this flow had activity, i.e. the time of
arrival of the most recent PDU belonging to this flow.""",
        }, # column
        "flowDataSourceSubscriberID" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.33",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "OctetString",
                    "ranges" : [
                    {
                        "min" : "4",
                        "max" : "20"
                    },
                    ],
                    "range" : {
                        "min" : "4",
                        "max" : "20"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Subscriber ID associated with the source address for this
flow.  A Subscriber ID is an unspecified text string, used
to ascribe traffic flows to individual users.  At this time
the means by which a Subscriber ID may be associated with a
flow is unspecified.""",
        }, # column
        "flowDataDestSubscriberID" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.34",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "OctetString",
                    "ranges" : [
                    {
                        "min" : "4",
                        "max" : "20"
                    },
                    ],
                    "range" : {
                        "min" : "4",
                        "max" : "20"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Subscriber ID associated with the destination address for
this flow.  A Subscriber ID is an unspecified text string,
used to ascribe traffic flows to individual users.  At this
time the means by which a Subscriber ID may be associated
with a flow is unspecified.""",
        }, # column
        "flowDataSessionID" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.35",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "OctetString",
                    "ranges" : [
                    {
                        "min" : "4",
                        "max" : "10"
                    },
                    ],
                    "range" : {
                        "min" : "4",
                        "max" : "10"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Session ID for this flow.  Such an ID might be allocated
by a network access server to distinguish a series of sessions
between the same pair of addresses, which would otherwise
appear to be parts of the same accounting flow.""",
        }, # column
        "flowDataSourceClass" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.36",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Source class for this flow.  Determined by the rules, set by
a PushRule action when this flow was entered in the table.""",
        }, # column
        "flowDataDestClass" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.37",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Destination class for this flow.  Determined by the rules, set
by a PushRule action when this flow was entered in the table.""",
        }, # column
        "flowDataClass" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.38",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Class for this flow.  Determined by the rules, set by a
PushRule action when this flow was entered in the table.""",
        }, # column
        "flowDataSourceKind" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.39",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Source kind for this flow.  Determined by the rules, set by
a PushRule action when this flow was entered in the table.""",
        }, # column
        "flowDataDestKind" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.40",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Destination kind for this flow.  Determined by the rules, set
by a PushRule action when this flow was entered in the table.""",
        }, # column
        "flowDataKind" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.1.1.41",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Class for this flow.  Determined by the rules, set by a
PushRule action when this flow was entered in the table.""",
        }, # column
        "flowColumnActivityTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.2",
            "status" : "deprecated",
            "description" :
                """Index into the Flow Table.  Allows a meter reader to retrieve
a list containing the flow table indexes of flows which were
last active at or after a given time, together with the values
of a specified attribute for each such flow.""",
        }, # table
        "flowColumnActivityEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.2.1",
            "status" : "deprecated",
            "linkage" : [
                "flowColumnActivityAttribute",
                "flowColumnActivityTime",
                "flowColumnActivityIndex",
            ],
            "description" :
                """The Column Activity Entry for a particular attribute,
activity time and flow.""",
        }, # row
        "flowColumnActivityAttribute" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.2.1.1",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "FlowAttributeNumber"},
            },
            "access" : "readonly",
            "description" :
                """Specifies the attribute for which values are required from
active flows.""",
        }, # column
        "flowColumnActivityTime" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.2.1.2",
            "status" : "deprecated",
            "syntax" : {
                "type" : { "module" :"RMON2-MIB", "name" : "TimeFilter"},
            },
            "access" : "readonly",
            "description" :
                """This variable is a copy of flowDataLastActiveTime in the
flow data record identified by the flowColumnActivityIndex
value of this flowColumnActivityTable entry.""",
        }, # column
        "flowColumnActivityIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.2.1.3",
            "status" : "deprecated",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Index of a flow table entry which was active at or after
a specified flowColumnActivityTime.""",
        }, # column
        "flowColumnActivityData" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.2.1.4",
            "status" : "deprecated",
            "syntax" : {
                "type" :                 {
                    "basetype" : "OctetString",
                    "ranges" : [
                    {
                        "min" : "3",
                        "max" : "1000"
                    },
                    ],
                    "range" : {
                        "min" : "3",
                        "max" : "1000"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """Collection of attribute data for flows active after
flowColumnActivityTime.  Within the OCTET STRING is a
sequence of { flow index, attribute value } pairs, one for
each active flow.  The end of the sequence is marked by a
flow index value of 0, indicating that there are no more
rows in this column.

The format of objects inside flowColumnFlowData is as follows.
All numbers are unsigned.  Numbers and strings appear with
their high-order bytes leading.  Numbers are fixed size, as
specified by their SYNTAX in the flow table (above), i.e. one
octet for flowAddressType and small constants, and four octets
for Counter and TimeStamp.  Strings are variable-length, with
the length given in a single leading octet.

The following is an attempt at an ASN.1 definition of
flowColumnActivityData:

flowColumnActivityData ::= SEQUENCE flowRowItemEntry
flowRowItemEntry ::= SEQUENCE {
   flowRowNumber    Integer32 (1..65535),
                         -- 0 indicates the end of this column
   flowDataValue   flowDataType -- Choice depends on attribute
   }
flowDataType ::= CHOICE {
    flowByteValue   Integer32 (1..255),
    flowShortValue  Integer32 (1..65535),
    flowLongValue   Integer32,
    flowStringValue OCTET STRING  -- Length (n) in first byte,
          -- n+1 bytes total length, trailing zeroes truncated
    }""",
        }, # column
        "flowDataPackageTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3",
            "status" : "current",
            "description" :
                """Index into the Flow Table.  Allows a meter reader to retrieve
a sequence containing the values of a specified set of
attributes for a flow which came from a specified RuleSet and
which was last active at or after a given time.""",
        }, # table
        "flowDataPackageEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3.1",
            "status" : "current",
            "linkage" : [
                "flowPackageSelector",
                "flowPackageRuleSet",
                "flowPackageTime",
                "flowPackageIndex",
            ],
            "description" :
                """The data package containing selected variables from
active rows in the flow table.""",
        }, # row
        "flowPackageSelector" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "OctetString"},
            },
            "access" : "noaccess",
            "description" :
                """Specifies the attributes for which values are required from
an active flow.  These are encoded as a sequence of octets
each containing a FlowAttribute number, preceded by an octet
giving the length of the sequence (not including the length
octet).  For a flowPackageSelector to be valid, it must
contain at least one attribute.""",
        }, # column
        "flowPackageRuleSet" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3.1.2",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "255"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "255"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """Specifies the index (in the flowRuleSetInfoTable) of the rule
set which produced the required flow.""",
        }, # column
        "flowPackageTime" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"RMON2-MIB", "name" : "TimeFilter"},
            },
            "access" : "noaccess",
            "description" :
                """This variable is a copy of flowDataLastActiveTime in the
flow data record identified by the flowPackageIndex
value of this flowPackageTable entry.""",
        }, # column
        "flowPackageIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3.1.4",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """Index of a flow table entry which was active at or after
a specified flowPackageTime.""",
        }, # column
        "flowPackageData" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.2.3.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "OctetString"},
            },
            "access" : "readonly",
            "description" :
                """A collection of attribute values for a single flow, as
specified by this row's indexes.  The attribute values are
contained within a BER-encoded sequence [ASN-1, ASN-BER],
in the order they appear in their flowPackageSelector.

For example, to retrieve a flowPackage containing values for
attributes 11, 18 and 29, for a flow in RuleSet 7, with flow
index 3447, one would GET the package whose Object Identifier
(OID) is
    flowPackageData . 3.11.18.29 . 7. 0 . 3447

To get a package for the next such flow which had been
active since time 12345 one would GETNEXT the package whose
Object Identifier (OID) is
    flowPackageData . 3.11.18.29 . 7. 12345 . 3447""",
        }, # column
        "flowRules" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3",
        }, # node
        "flowRuleTable" : {
            "nodetype" : "table",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1",
            "status" : "current",
            "description" :
                """Contains all the RuleSets which may be used by the meter.""",
        }, # table
        "flowRuleEntry" : {
            "nodetype" : "row",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1",
            "status" : "current",
            "linkage" : [
                "flowRuleSet",
                "flowRuleIndex",
            ],
            "description" :
                """The rule record itself.""",
        }, # row
        "flowRuleSet" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.1",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """Selects a RuleSet from the array of RuleSets.""",
        }, # column
        "flowRuleIndex" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.2",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "2147483647"
                    },
                },
            },
            "access" : "noaccess",
            "description" :
                """The index into the Rule table.  N.B: These values will
normally be consecutive, given the fall-through semantics
of processing the table.""",
        }, # column
        "flowRuleSelector" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "RuleAttributeNumber"},
            },
            "access" : "readwrite",
            "description" :
                """Indicates the attribute to be matched.

null(0) is a special case; null rules always succeed.
matchingStoD(50) is set by the meter's Packet Matching Engine.
Its value is true(1) if the PME is attempting to match the
packet with its addresses in Source-to-Destination order (i.e.
as they appear in the packet), and false(2) otherwise.
Details of how packets are matched are given in the 'Traffic
Flow Measurement: Architecture' document [RTFM-ARC].
v1(51), v2(52), v3(53), v4(54) and v5(55) select meter
variables, each of which can hold the name (i.e. selector
value) of an address attribute.  When one of these is used
as a selector, its value specifies the attribute to be
tested.  Variable values are set by an Assign action.""",
        }, # column
        "flowRuleMask" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.4",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "RuleAddress"},
            },
            "access" : "readwrite",
            "description" :
                """The initial mask used to compute the desired value.  If the
mask is zero the rule's test will always succeed.""",
        }, # column
        "flowRuleMatchedValue" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.5",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "RuleAddress"},
            },
            "access" : "readwrite",
            "description" :
                """The resulting value to be matched for equality.
Specifically, if the attribute chosen by the flowRuleSelector
logically ANDed with the mask specified by the flowRuleMask
equals the value specified in the flowRuleMatchedValue, then
continue processing the table entry based on the action
specified by the flowRuleAction entry.  Otherwise, proceed to
the next entry in the rule table.""",
        }, # column
        "flowRuleAction" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.6",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"FLOW-METER-MIB", "name" : "ActionNumber"},
            },
            "access" : "readwrite",
            "description" :
                """The action to be taken if this rule's test succeeds, or if
the meter's 'test' flag is off.  Actions are opcodes for the
meter's Packet Matching Engine; details are given in the
'Traffic Flow Measurement: Architecture' document [RTFM-ARC].""",
        }, # column
        "flowRuleParameter" : {
            "nodetype" : "column",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.3.1.1.7",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Integer32",
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "65535"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "65535"
                    },
                },
            },
            "access" : "readwrite",
            "description" :
                """A parameter value providing extra information for this rule's
action.  Most of the actions use the parameter value to specify
which rule to execute after this rule's test has failed; details
are given in the 'Traffic Flow Measurement: Architecture'
document [RTFM-ARC].""",
        }, # column
        "flowMIBConformance" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4",
        }, # node
        "flowMIBCompliances" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.1",
        }, # node
        "flowMIBGroups" : {
            "nodetype" : "node",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2",
        }, # node
    }, # nodes

    "groups" : {
        "flowControlGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.1",
            "status" : "deprecated",
            "members" : {
                "flowRuleInfoSize" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoOwner" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoTimeStamp" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoName" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoRulesReady" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoFlowRecords" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowInterfaceSampleRate" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowInterfaceLostPackets" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderTimeout" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderOwner" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderLastTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderPreviousTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderRuleSet" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerCurrentRuleSet" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerStandbyRuleSet" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerHighWaterMark" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerCounterWrap" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerOwner" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerTimeStamp" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerRunningStandby" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowFloodMark" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowInactivityTimeout" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowActiveFlows" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowMaxFlows" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowFloodMode" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The control group defines objects which are used to control
an accounting meter.""",
        }, # group
        "flowDataTableGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.2",
            "status" : "deprecated",
            "members" : {
                "flowDataStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceInterface" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceAdjacentType" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceAdjacentAddress" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceAdjacentMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourcePeerType" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourcePeerAddress" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourcePeerMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceTransType" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceTransAddress" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceTransMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestInterface" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestAdjacentType" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestAdjacentAddress" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestAdjacentMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestPeerType" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestPeerAddress" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestPeerMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestTransType" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestTransAddress" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestTransMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataToOctets" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataToPDUs" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataFromOctets" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataFromPDUs" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataFirstTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataLastActiveTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceClass" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestClass" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataClass" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSourceKind" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestKind" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataKind" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The flow table group defines objects which provide the
structure for the flow table, including the creation time
and activity time indexes into it.  In addition it defines
objects which provide a base set of flow attributes for the
adjacent, peer and transport layers, together with a flow's
counters and times.  Finally it defines a flow's class and
kind attributes, which are set by rule actions.""",
        }, # group
        "flowDataScaleGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.3",
            "status" : "deprecated",
            "members" : {
                "flowManagerCounterWrap" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataPDUScale" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataOctetScale" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The flow scale group defines objects which specify scale
factors for counters.""",
        }, # group
        "flowDataSubscriberGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.4",
            "status" : "current",
            "members" : {
                "flowDataSourceSubscriberID" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataDestSubscriberID" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataSessionID" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The flow subscriber group defines objects which may be used
to identify the end point(s) of a flow.""",
        }, # group
        "flowDataColumnTableGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.5",
            "status" : "deprecated",
            "members" : {
                "flowColumnActivityAttribute" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowColumnActivityIndex" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowColumnActivityTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowColumnActivityData" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The flow column table group defines objects which can be used
to collect part of a column of attribute values from the flow
table.""",
        }, # group
        "flowDataPackageGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.6",
            "status" : "current",
            "members" : {
                "flowPackageData" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The data package group defines objects which can be used
to collect a specified set of attribute values from a row of
the flow table.""",
        }, # group
        "flowRuleTableGroup" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.7",
            "status" : "current",
            "members" : {
                "flowRuleSelector" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleMask" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleMatchedValue" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleAction" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleParameter" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The rule table group defines objects which hold the set(s)
of rules specifying which traffic flows are to be accounted
for.""",
        }, # group
        "flowDataScaleGroup2" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.8",
            "status" : "current",
            "members" : {
                "flowDataPDUScale" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataOctetScale" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The flow scale group defines objects which specify scale
factors for counters.  This group replaces the earlier
version of flowDataScaleGroup above (now deprecated).""",
        }, # group
        "flowControlGroup2" : {
            "nodetype" : "group",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.2.9",
            "status" : "current",
            "members" : {
                "flowRuleInfoSize" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoOwner" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoTimeStamp" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoName" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleInfoFlowRecords" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowInterfaceSampleRate" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowInterfaceLostPackets" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderTimeout" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderOwner" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderLastTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderPreviousTime" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowReaderRuleSet" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerCurrentRuleSet" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerStandbyRuleSet" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerHighWaterMark" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerOwner" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerTimeStamp" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerStatus" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowManagerRunningStandby" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowFloodMark" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowInactivityTimeout" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowActiveFlows" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowMaxFlows" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
                "flowFloodMode" : {
                    "nodetype" : "member",
                    "module" : "FLOW-METER-MIB"
                },
            }, # members
            "description" :
                """The control group defines objects which are used to control
an accounting meter.  It replaces the earlier version of
flowControlGroup above (now deprecated).""",
        }, # group
    }, # groups

    "compliances" : {
        "flowMIBCompliance" : {
            "nodetype" : "compliance",
            "moduleName" : "FLOW-METER-MIB",
            "oid" : "1.3.6.1.2.1.40.4.1.1",
            "status" : "current",
            "description" :
                """The compliance statement for a Traffic Flow Meter.""",
            "requires" : {
                "flowControlGroup2" : {
                    "nodetype" : "mandatory",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataTableGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "FLOW-METER-MIB"
                },
                "flowDataPackageGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "FLOW-METER-MIB"
                },
                "flowRuleTableGroup" : {
                    "nodetype" : "mandatory",
                    "module" : "FLOW-METER-MIB"
                },
            }, # requires
        }, # compliance
    }, # compliances

}
